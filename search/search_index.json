{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IST256 Spring 2022 Course Schedule Dates Topic (Click Link for Content) 1/24 - 1/30 Lesson 01: Introduction to Python Programming 1/31- 2/6 Lesson 02: Input, Output, Variables and Types 2/7 - 2/13 Lesson 03: Conditionals 2/14 - 2/20 Lesson 04: Iterations 2/21 - 2/27 Lesson 05: User-defined Functions, Modules 2/28 - 3/6 Lesson 06: Strings and Text Processing 3/7 - 3/13 Lesson 07: File I/O and Persistence 3/14 - 3/20 No Classes - Spring Break 3/21 - 3/27 Lesson 08: Lists 3/28 - 4/3 Lesson 09: Dictionaries and JSON 4/4 - 4/10 Lesson 10: HTTP Protocol and Network Programming 4/11 - 5/17 Lesson 11: Web API\u2019s 4/18 - 4/24 Lesson 12: Data Analysis with Pandas 4/25 - 5/1 Lesson 13: Data Visualization 5/2 - 5/8 Project Week (No Large Group Meeting, Meet Small Group Online for P2) What\u2019s Due? Use this table to track the due dates of the out-of-class deliverables in this course. Dates and times are Eastern Time Zone. Date Due Time Due Gradebook Points Tool What is Due? 1/29/2022 11:59 PM Z01 2 Zybooks Chapter 1 1/29/2022 11:59 PM L01 3 Jupyterhub 01-Intro/LAB-Intro.ipynb 1/29/2022 11:59 PM S01 1 Jupyterhub 01-Intro/SmallGroup-Intro.ipynb 1/29/2022 11:59 PM H01 3 Jupyterhub 01-Intro/HW-Intro.ipynb 1/31/2022 3:00 PM Z02 2 Zybooks Chapter 2 2/1/2022 11:59 PM L02 3 Jupyterhub 02-Variables/LAB-Variables.ipynb 2/2/2022 11:59 PM S02 1 Jupyterhub 02-Variables/SmallGroup-Variables.ipynb 2/5/2022 11:59 PM H02 3 Jupyterhub 02-Variables/HW-Variables.ipynb 2/7/2022 3:00 PM Z03 2 Zybooks Chapter 3 2/8/2022 11:59 PM L03 3 Jupyterhub 03-Conditionals/LAB-Conditionals.ipynb 2/9/2022 11:59 PM S03 1 Jupyterhub 03-Conditionals/SmallGroup-Conditionals.ipynb 2/12/2022 11:59 PM H03 3 Jupyterhub 03-Conditionals/HW-Conditionals.ipynb 2/14/2022 3:00 PM Z04 2 Zybooks Chapter 4 2/15/2022 11:59 PM L04 3 Jupyterhub 04-Iterations/LAB-Iterations.ipynb 2/16/2022 11:59 PM S04 1 Jupyterhub 04-Iterations/SmallGroup-Iterations.ipynb 2/18/2022 11:59 PM E1 30 Blackboard Exam 1 (Focus on Lessons 01-03) 2/19/2022 11:59 PM H04 3 Jupyterhub 04-Iterations/HW-Iterations.ipynb 2/21/2022 3:00 PM Z05 2 Zybooks Chapter 5 2/22/2022 11:59 PM L05 3 Jupyterhub 05-Functions/LAB-Functions.ipynb 2/23/2022 11:59 PM S05 1 Jupyterhub 05-Functions/SmallGroup-Functions.ipynb 2/26/2022 11:59 PM H05 3 Jupyterhub 05-Functions/HW-Functions.ipynb 2/28/2022 3:00 PM Z06 2 Zybooks Chapter 6 3/1/2022 11:59 PM L06 3 Jupyterhub 06-Strings/LAB-Strings.ipynb 3/2/2022 11:59 PM S06 1 Jupyterhub 06-Strings/SmallGroup-Strings.ipynb 3/5/2022 11:59 PM H06 3 Jupyterhub 06-Strings/HW-Strings.ipynb 3/7/2022 3:00 PM Z07 2 Zybooks Chapter 7 3/8/2022 11:59 PM L07 3 Jupyterhub 07-Files/LAB-Files.ipynb 3/9/2022 11:59 PM S07 1 Jupyterhub 07-Files/SmallGroup-Files.ipynb 3/19/2022 11:59 PM H07 3 Jupyterhub 07-Files/HW-Files.ipynb 3/21/2022 3:00 PM Z08 2 Zybooks Chapter 8 3/22/2022 11:59 PM L08 3 Jupyterhub 08-Lists/LAB-Lists.ipynb 3/23/2022 11:59 PM S08 1 Jupyterhub 08-Lists/SmallGroup-Lists.ipynb 3/25/2022 11:59 PM E2 30 Blackboard Exam 2 (Focus on Lessons 04-07) 3/26/2022 11:59 PM H08 3 Jupyterhub 08-Lists/HW-Lists.ipynb 3/28/2022 3:00 PM Z09 2 Zybooks Chapter 9 3/29/2022 11:59 PM L09 3 Jupyterhub 09-Dictionaries/LAB-Dictionaries.ipynb 3/30/2022 11:59 PM S09 1 Jupyterhub 09-Dictionaries/SmallGroup-Dictionaries.ipynb 4/2/2022 11:59 PM H09 3 Jupyterhub 09-Dictionaries/HW-Dictionaries.ipynb 4/5/2022 11:59 PM L10 3 Jupyterhub 10-HTTP/LAB-HTTP.ipynb 4/6/2022 11:59 PM S10 1 Jupyterhub 10-HTTP/SmallGroup-HTTP.ipynb 4/9/2022 11:59 PM H10 3 Jupyterhub 10-HTTP/HW-HTTP.ipynb 4/12/2022 11:59 PM L11 3 Jupyterhub 11-WebAPIs/LAB-WebAPIs.ipynb 4/13/2022 11:59 PM S11 1 Jupyterhub 11-WebAPIs/SmallGroup-WebAPIs.ipynb 4/15/2022 11:59 PM E3 30 Blackboard Exam 3 (Focus on Lessons 08-10) 4/16/2022 11:59 PM H11 3 Jupyterhub 11-WebAPIs/HW-WebAPIs.ipynb 4/19/2022 11:59 PM L12 3 Jupyterhub 12-Pandas/LAB-Pandas.ipynb 4/20/2022 11:59 PM S12 1 Jupyterhub 12-Pandas/SmallGroup-Pandas.ipynb 4/23/2022 11:59 PM H12 3 Jupyterhub 12-Pandas/HW-Pandas.ipynb 4/24/2022 11:59 PM P1 0 Jupyterhub project/P1.ipynb 4/25/2022 3:00 PM Z10 2 Zybooks Chapter 10 4/26/2022 11:59 PM L13 3 Jupyterhub 13-Visualization/LAB-Visualization.ipynb 4/27/2022 11:59 PM S13 1 Jupyterhub 13-Visualization/SmallGroup-Visualization.ipynb 4/30/2022 11:59 PM H13 3 Jupyterhub 13-Visualization/HW-Visualization.ipynb 5/2/2022 11:59 PM E4 30 Blackboard Exam 4 (Focus on Lessons 11-13) 5/4/2022 11:59 PM P2 0 Jupyterhub project/P2.ipynb 5/10/2022 11:59 PM P3 0 Jupyterhub project/P3.ipynb 5/10/2022 11:59 PM P4 49 Jupyterhub project/P4.ipynb","title":"Home"},{"location":"#ist256-spring-2022","text":"","title":"IST256 Spring 2022"},{"location":"#course-schedule","text":"Dates Topic (Click Link for Content) 1/24 - 1/30 Lesson 01: Introduction to Python Programming 1/31- 2/6 Lesson 02: Input, Output, Variables and Types 2/7 - 2/13 Lesson 03: Conditionals 2/14 - 2/20 Lesson 04: Iterations 2/21 - 2/27 Lesson 05: User-defined Functions, Modules 2/28 - 3/6 Lesson 06: Strings and Text Processing 3/7 - 3/13 Lesson 07: File I/O and Persistence 3/14 - 3/20 No Classes - Spring Break 3/21 - 3/27 Lesson 08: Lists 3/28 - 4/3 Lesson 09: Dictionaries and JSON 4/4 - 4/10 Lesson 10: HTTP Protocol and Network Programming 4/11 - 5/17 Lesson 11: Web API\u2019s 4/18 - 4/24 Lesson 12: Data Analysis with Pandas 4/25 - 5/1 Lesson 13: Data Visualization 5/2 - 5/8 Project Week (No Large Group Meeting, Meet Small Group Online for P2)","title":"Course Schedule"},{"location":"#whats-due","text":"Use this table to track the due dates of the out-of-class deliverables in this course. Dates and times are Eastern Time Zone. Date Due Time Due Gradebook Points Tool What is Due? 1/29/2022 11:59 PM Z01 2 Zybooks Chapter 1 1/29/2022 11:59 PM L01 3 Jupyterhub 01-Intro/LAB-Intro.ipynb 1/29/2022 11:59 PM S01 1 Jupyterhub 01-Intro/SmallGroup-Intro.ipynb 1/29/2022 11:59 PM H01 3 Jupyterhub 01-Intro/HW-Intro.ipynb 1/31/2022 3:00 PM Z02 2 Zybooks Chapter 2 2/1/2022 11:59 PM L02 3 Jupyterhub 02-Variables/LAB-Variables.ipynb 2/2/2022 11:59 PM S02 1 Jupyterhub 02-Variables/SmallGroup-Variables.ipynb 2/5/2022 11:59 PM H02 3 Jupyterhub 02-Variables/HW-Variables.ipynb 2/7/2022 3:00 PM Z03 2 Zybooks Chapter 3 2/8/2022 11:59 PM L03 3 Jupyterhub 03-Conditionals/LAB-Conditionals.ipynb 2/9/2022 11:59 PM S03 1 Jupyterhub 03-Conditionals/SmallGroup-Conditionals.ipynb 2/12/2022 11:59 PM H03 3 Jupyterhub 03-Conditionals/HW-Conditionals.ipynb 2/14/2022 3:00 PM Z04 2 Zybooks Chapter 4 2/15/2022 11:59 PM L04 3 Jupyterhub 04-Iterations/LAB-Iterations.ipynb 2/16/2022 11:59 PM S04 1 Jupyterhub 04-Iterations/SmallGroup-Iterations.ipynb 2/18/2022 11:59 PM E1 30 Blackboard Exam 1 (Focus on Lessons 01-03) 2/19/2022 11:59 PM H04 3 Jupyterhub 04-Iterations/HW-Iterations.ipynb 2/21/2022 3:00 PM Z05 2 Zybooks Chapter 5 2/22/2022 11:59 PM L05 3 Jupyterhub 05-Functions/LAB-Functions.ipynb 2/23/2022 11:59 PM S05 1 Jupyterhub 05-Functions/SmallGroup-Functions.ipynb 2/26/2022 11:59 PM H05 3 Jupyterhub 05-Functions/HW-Functions.ipynb 2/28/2022 3:00 PM Z06 2 Zybooks Chapter 6 3/1/2022 11:59 PM L06 3 Jupyterhub 06-Strings/LAB-Strings.ipynb 3/2/2022 11:59 PM S06 1 Jupyterhub 06-Strings/SmallGroup-Strings.ipynb 3/5/2022 11:59 PM H06 3 Jupyterhub 06-Strings/HW-Strings.ipynb 3/7/2022 3:00 PM Z07 2 Zybooks Chapter 7 3/8/2022 11:59 PM L07 3 Jupyterhub 07-Files/LAB-Files.ipynb 3/9/2022 11:59 PM S07 1 Jupyterhub 07-Files/SmallGroup-Files.ipynb 3/19/2022 11:59 PM H07 3 Jupyterhub 07-Files/HW-Files.ipynb 3/21/2022 3:00 PM Z08 2 Zybooks Chapter 8 3/22/2022 11:59 PM L08 3 Jupyterhub 08-Lists/LAB-Lists.ipynb 3/23/2022 11:59 PM S08 1 Jupyterhub 08-Lists/SmallGroup-Lists.ipynb 3/25/2022 11:59 PM E2 30 Blackboard Exam 2 (Focus on Lessons 04-07) 3/26/2022 11:59 PM H08 3 Jupyterhub 08-Lists/HW-Lists.ipynb 3/28/2022 3:00 PM Z09 2 Zybooks Chapter 9 3/29/2022 11:59 PM L09 3 Jupyterhub 09-Dictionaries/LAB-Dictionaries.ipynb 3/30/2022 11:59 PM S09 1 Jupyterhub 09-Dictionaries/SmallGroup-Dictionaries.ipynb 4/2/2022 11:59 PM H09 3 Jupyterhub 09-Dictionaries/HW-Dictionaries.ipynb 4/5/2022 11:59 PM L10 3 Jupyterhub 10-HTTP/LAB-HTTP.ipynb 4/6/2022 11:59 PM S10 1 Jupyterhub 10-HTTP/SmallGroup-HTTP.ipynb 4/9/2022 11:59 PM H10 3 Jupyterhub 10-HTTP/HW-HTTP.ipynb 4/12/2022 11:59 PM L11 3 Jupyterhub 11-WebAPIs/LAB-WebAPIs.ipynb 4/13/2022 11:59 PM S11 1 Jupyterhub 11-WebAPIs/SmallGroup-WebAPIs.ipynb 4/15/2022 11:59 PM E3 30 Blackboard Exam 3 (Focus on Lessons 08-10) 4/16/2022 11:59 PM H11 3 Jupyterhub 11-WebAPIs/HW-WebAPIs.ipynb 4/19/2022 11:59 PM L12 3 Jupyterhub 12-Pandas/LAB-Pandas.ipynb 4/20/2022 11:59 PM S12 1 Jupyterhub 12-Pandas/SmallGroup-Pandas.ipynb 4/23/2022 11:59 PM H12 3 Jupyterhub 12-Pandas/HW-Pandas.ipynb 4/24/2022 11:59 PM P1 0 Jupyterhub project/P1.ipynb 4/25/2022 3:00 PM Z10 2 Zybooks Chapter 10 4/26/2022 11:59 PM L13 3 Jupyterhub 13-Visualization/LAB-Visualization.ipynb 4/27/2022 11:59 PM S13 1 Jupyterhub 13-Visualization/SmallGroup-Visualization.ipynb 4/30/2022 11:59 PM H13 3 Jupyterhub 13-Visualization/HW-Visualization.ipynb 5/2/2022 11:59 PM E4 30 Blackboard Exam 4 (Focus on Lessons 11-13) 5/4/2022 11:59 PM P2 0 Jupyterhub project/P2.ipynb 5/10/2022 11:59 PM P3 0 Jupyterhub project/P3.ipynb 5/10/2022 11:59 PM P4 49 Jupyterhub project/P4.ipynb","title":"What's Due?"},{"location":"about/","text":"About IST256 IST256 is an introductory programming course taught in the School of Information Studies at Syracuse university https://ischool.syr.edu . Programming is taught from the information sciences perspective with more emphasis on data-oriented applications such as text processing, data munging/analysis, Web API consumption, and visualization and less on computation. Students learn the Python https://www.python.org/ programming language and are expected to write code in the Jupyter https://jupyter.org Notebook interface. Python and Jupyter are common tools in data science today. The course uses a hosted Jupyterhub cluster https://zero-to-jupyterhub.readthedocs.io/en/latest/ for its programming environment. To code, students only need a web browser. The cluster runs on kubernetes and consists of 6 virtual machines with 8 threads and 64GB ram each. The cluster can support 100\u2019s of concurrent users and can be scaled to support more as the need arises. This website is a Github page, the source can be found here. https://github.com/IST256/IST256.github.io . The latest code repository of student assignments, labs, homework, class slides and code examples are also on Github, here: https://github.com/IST256/spring2021 . You are welcome to use the materials to take the course as an independent learner or as a foundation for teaching your own course in Python! Best, Michael Fudge mafudge at syr dot edu Many thanks to: Syracuse University ITS for providing the compute resources necessary to host the cluster https://its.syr.edu/ . Charles Severance for his excellent book, \u201cPython for Everybody\u201d https://www.py4e.com/ . Elliot Hauser for https://trinket.io . GitHub for hosting this website and the code repositories https://github.com . Nick Lyga for helping to get the kubernetes environment up and running https://nicklyga.me/ . The 100\u2019s of individuals in the Python and Jupyter communities!","title":"About"},{"location":"about/#about-ist256","text":"IST256 is an introductory programming course taught in the School of Information Studies at Syracuse university https://ischool.syr.edu . Programming is taught from the information sciences perspective with more emphasis on data-oriented applications such as text processing, data munging/analysis, Web API consumption, and visualization and less on computation. Students learn the Python https://www.python.org/ programming language and are expected to write code in the Jupyter https://jupyter.org Notebook interface. Python and Jupyter are common tools in data science today. The course uses a hosted Jupyterhub cluster https://zero-to-jupyterhub.readthedocs.io/en/latest/ for its programming environment. To code, students only need a web browser. The cluster runs on kubernetes and consists of 6 virtual machines with 8 threads and 64GB ram each. The cluster can support 100\u2019s of concurrent users and can be scaled to support more as the need arises. This website is a Github page, the source can be found here. https://github.com/IST256/IST256.github.io . The latest code repository of student assignments, labs, homework, class slides and code examples are also on Github, here: https://github.com/IST256/spring2021 . You are welcome to use the materials to take the course as an independent learner or as a foundation for teaching your own course in Python! Best, Michael Fudge mafudge at syr dot edu Many thanks to: Syracuse University ITS for providing the compute resources necessary to host the cluster https://its.syr.edu/ . Charles Severance for his excellent book, \u201cPython for Everybody\u201d https://www.py4e.com/ . Elliot Hauser for https://trinket.io . GitHub for hosting this website and the code repositories https://github.com . Nick Lyga for helping to get the kubernetes environment up and running https://nicklyga.me/ . The 100\u2019s of individuals in the Python and Jupyter communities!","title":"About IST256"},{"location":"content/","text":"Content Lesson 01: Introduction Overview This lesson we learn: What is Python? What are the advantages / disadvantages of the language? How does it compare with other programming languages? The Jupyter Notebook environment. How to execute programs from the Jupyter environment. Python programming language basics. Print, Assignment and Input statements. Writing simple programs in Python following the Input / Process / Output model. Required Reading / Viewing ZyBook Ch 1: Introduction Severance Ch 1: Introduction Quick Introduction to Jupyter Notebook, by Michael Fudge Large Group Video Lecture Lab Walk Through Homework Advice More Resources How to think like a programmer - Lessons in problem solving Python for Everybody: Ch1 Part 1 | Part 2 | Part 3 | Part 4 , by Charles Severance \u201cTEDxSMU: You Should Learn to Program\u201d, by Christian Genco \u201cTEDxCERN: The poetry of programming\u201d, by Linda Liukas Lesson 02: Variables Overview This lesson we learn: What is a variable? What is its purpose? Variable assignment, and access. Different data types for variables. How to input variables of various types, check types, convert types, and print variables with formatting. Arithmetic expressions, arithmetic operators, and operands. Different ways to format output. Required Reading / Viewing ZyBook Ch 2: Variables And Types Severance Ch 2: Variables, Expressions, Statements Large Group Video Lecture Lab Walk Through Homework Advice More Resources End to End Example: Variables and Types, by Michael Fudge Python for Everybody: Ch2 Part 1 | Part 2 , by Charles Severance Lesson 03: Conditionals Overview In this lesson we learn: How to make our code execute in a non linear fashion through the use of conditionals. Relational and logical operators for making Boolean expressions which form the basis of our decisions. Different types of non-linear execution like conditional execution, alternative execution, chaining, and nesting, and their appropriate uses. How to handle run-time errors with try..except. Required Reading / Viewing ZyBook Ch 3: Conditionals Severance Ch 3: Conditional Execution Large Group Video Lecture NOTE: Recording didn\u2019t work, so this is from last semester. Lab Walk Through Homework Advice More Resources End to End Example: Conditionals, By Michael Fudge Python for Everybody: Ch3 Part 1 | Part 2 , by Charles Severance Lesson 04: Iterations Overview In this lesson we learn: How to make our code execute in a non linear fashion through the use of iterations, or loops. The while loop for indefinite looping, infinite loops, and the break and continue statements How to build complex loops easily. Definite loops (for loops) and iterators. Required Reading / Viewing ZyBook Ch 4: Iterations Severance Ch 5: Iterations Large Group Video Lecture Lab Walk Through Homework Advice More Resources End to End Example: Iterations, by Michael Fudge Python for Everybody: Ch5 Part 1 | Part 2 | Part 3 | Part 4 , by Charles Severance Lesson 05: Functions Overview In this lesson we learn: How to use and discover other functions in modules. How to inspect module contents and get help on functions. The anatomy of custom functions: arguments, named arguments, return values How to modularize our code with custom functions. Required Reading / Viewing ZyBook Ch 5 Functions Severance Ch 4: Functions Large Group Video Lecture Lab Walk Through Homework Advice More Resources End to End Example: Functions, by Michael Fudge Python for Everybody: Ch4 Part 1 | Part 2 , by Charles Severance Lesson 06: Strings Overview In this lesson we learn: Strings as an immutable sequence of characters. Index and Slice notation for retrieving sub-strings. Built-in string functions to perform operations on strings. Techniques for parsing and tokenizing string data. How to sanitize input with string functions. Required Reading / Viewing ZyBook Ch 6: Strings Severance Ch 6: Strings Large Group Video Lecture Lab Walk Through Homework Advice More Resources End to End Example: Strings, by Michael Fudge Python for Everybody: Ch6 Part 1 | Part 2 , by Charles Severance Lesson 07: Files Overview In this lesson we learn: The importance of a persistence layer in programming. How to read, write, and append to files. Techniques for reading a file a line at a time and all at once. Using exception handling with files. Text encodings. Required Reading / Viewing ZyBook Ch 7: Files Severance Ch 7: Persistence Large Group Video Lecture Lab Walk Through Homework Advice More Resources End to End Example: Files, by Michael Fudge Python for Everybody: Ch7 Part 1 | Part 2 , by Charles Severance Lesson 08: Lists In this lesson we learn: Lists as a mutable sequence of values. Indexing list values; slice notation. List functions and operations like add, remove, update, find Common patterns for list management. Parsing file data into lists. Overview Required Reading / Viewing ZyBook Ch 8: Lists Severance Ch 8: Lists Large Group Video Lecture Lab Walk Through Homework Advice More Resources End to End Example: Lists, by Michael Fudge Python for Everybody: Ch8 Part 1 | Part 2 | Part 3 , by Charles Severance Lesson 09: Dictionaries Overview In this lesson we learn: Dictionaries as key-value pairs. Basic dictionary operations such as getting/setting keys and values Common dictionary use cases, such as representing complex objects. List of dictionary as an in-memory database of objects. Using the json library to serialize / de-serialize json data. Required Reading / Viewing ZyBook Ch 9: Dictionaries Severance Ch 9: Dictionaries Large Group Video Lecture Lab Walk Through Homework Advice More Resources End to End Example: Dictionaries, by Michael Fudge Python for Everybody: Ch9 Part 1 | Part 2 | Part 3 , by Charles Severance Lesson 10: HTTP Overview In this lesson we learn: Learn how HTTP, the protocol of the web works. To execute HTTP requests using Python requests De-serialize HTTP responses in JSON format into Python objects General procedure for reading and calling API\u2019s on the web. Required Reading / Viewing Fudge: Web API\u2019s In Python (Part 1 and 2) Severance Ch 12: Networked Programs Large Group Video Lecture Lab Walk Through Homework Advice More Resources End to End Example: Web API\u2019s, by Michael Fudge Python for Everybody: Ch12 Part 3 , by Charles Severance Lesson 11: Web API\u2019s Overview In this lesson we learn: How to read and use documented Web API\u2019s Learn how to structure API calls GET/POST, in header, url or query string. How to perform API Authentication Via Key and OAUTH2 To read HTTP responses in body and headers General procedure for calling any web API. Required Reading / Viewing Fudge: Web Api\u2019s In Python (Part 3 and 4) Severance Ch 13: Web Services ### Large Group Video Lecture Lab Walk Through Homework Advice More Resources End to End Example: Web API\u2019s, by Michael Fudge Python for Everybody: Ch13 Part 1 | Part 4 , by Charles Severance Lesson 12: Pandas Overview In this lesson we learn: What exactly is Pandas, What is data analysis? How can Pandas help you perform data analysis? Managing Pandas data structures. Using Pandas to read and write a variety of file formats. Required Reading / Viewing Fudge: Data Analysis with Pandas Official Pandas Tutorials (optional) Large Group Video Lecture Lab Walk Through Homework Advice More Resources End to End Example: Data Analysis in Pandas, by Michael Fudge Python for Data Analysis, by Sentdex Lesson 13: Visualization Overview In this lesson we learn: Why information visualization is important The various ways to visualize information The basic requirements for any visualization How to plot complex visualizations such as multi-series charts and maps Required Reading / Viewing ZyBook Ch 10: Plotting Large Group Video Lecture Lab Walk Through Homework Advice More Resources End to End Example: Mapping Potholes Matplotlib Tutorial Series","title":"Content"},{"location":"content/#content","text":"","title":"Content"},{"location":"content/#lesson-01-introduction","text":"","title":"Lesson 01: Introduction"},{"location":"content/#overview","text":"This lesson we learn: What is Python? What are the advantages / disadvantages of the language? How does it compare with other programming languages? The Jupyter Notebook environment. How to execute programs from the Jupyter environment. Python programming language basics. Print, Assignment and Input statements. Writing simple programs in Python following the Input / Process / Output model.","title":"Overview"},{"location":"content/#required-reading-viewing","text":"ZyBook Ch 1: Introduction Severance Ch 1: Introduction Quick Introduction to Jupyter Notebook, by Michael Fudge","title":"Required Reading / Viewing"},{"location":"content/#large-group-video-lecture","text":"","title":"Large Group Video Lecture"},{"location":"content/#lab-walk-through","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice","text":"","title":"Homework Advice"},{"location":"content/#more-resources","text":"How to think like a programmer - Lessons in problem solving Python for Everybody: Ch1 Part 1 | Part 2 | Part 3 | Part 4 , by Charles Severance \u201cTEDxSMU: You Should Learn to Program\u201d, by Christian Genco \u201cTEDxCERN: The poetry of programming\u201d, by Linda Liukas","title":"More Resources"},{"location":"content/#lesson-02-variables","text":"","title":"Lesson 02: Variables"},{"location":"content/#overview_1","text":"This lesson we learn: What is a variable? What is its purpose? Variable assignment, and access. Different data types for variables. How to input variables of various types, check types, convert types, and print variables with formatting. Arithmetic expressions, arithmetic operators, and operands. Different ways to format output.","title":"Overview"},{"location":"content/#required-reading-viewing_1","text":"ZyBook Ch 2: Variables And Types Severance Ch 2: Variables, Expressions, Statements","title":"Required Reading / Viewing"},{"location":"content/#large-group-video-lecture_1","text":"","title":"Large Group Video Lecture"},{"location":"content/#lab-walk-through_1","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice_1","text":"","title":"Homework Advice"},{"location":"content/#more-resources_1","text":"End to End Example: Variables and Types, by Michael Fudge Python for Everybody: Ch2 Part 1 | Part 2 , by Charles Severance","title":"More Resources"},{"location":"content/#lesson-03-conditionals","text":"","title":"Lesson 03: Conditionals"},{"location":"content/#overview_2","text":"In this lesson we learn: How to make our code execute in a non linear fashion through the use of conditionals. Relational and logical operators for making Boolean expressions which form the basis of our decisions. Different types of non-linear execution like conditional execution, alternative execution, chaining, and nesting, and their appropriate uses. How to handle run-time errors with try..except.","title":"Overview"},{"location":"content/#required-reading-viewing_2","text":"ZyBook Ch 3: Conditionals Severance Ch 3: Conditional Execution","title":"Required Reading / Viewing"},{"location":"content/#large-group-video-lecture_2","text":"NOTE: Recording didn\u2019t work, so this is from last semester.","title":"Large Group Video Lecture"},{"location":"content/#lab-walk-through_2","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice_2","text":"","title":"Homework Advice"},{"location":"content/#more-resources_2","text":"End to End Example: Conditionals, By Michael Fudge Python for Everybody: Ch3 Part 1 | Part 2 , by Charles Severance","title":"More Resources"},{"location":"content/#lesson-04-iterations","text":"","title":"Lesson 04: Iterations"},{"location":"content/#overview_3","text":"In this lesson we learn: How to make our code execute in a non linear fashion through the use of iterations, or loops. The while loop for indefinite looping, infinite loops, and the break and continue statements How to build complex loops easily. Definite loops (for loops) and iterators.","title":"Overview"},{"location":"content/#required-reading-viewing_3","text":"ZyBook Ch 4: Iterations Severance Ch 5: Iterations","title":"Required Reading / Viewing"},{"location":"content/#large-group-video-lecture_3","text":"","title":"Large Group Video Lecture"},{"location":"content/#lab-walk-through_3","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice_3","text":"","title":"Homework Advice"},{"location":"content/#more-resources_3","text":"End to End Example: Iterations, by Michael Fudge Python for Everybody: Ch5 Part 1 | Part 2 | Part 3 | Part 4 , by Charles Severance","title":"More Resources"},{"location":"content/#lesson-05-functions","text":"","title":"Lesson 05: Functions"},{"location":"content/#overview_4","text":"In this lesson we learn: How to use and discover other functions in modules. How to inspect module contents and get help on functions. The anatomy of custom functions: arguments, named arguments, return values How to modularize our code with custom functions.","title":"Overview"},{"location":"content/#required-reading-viewing_4","text":"ZyBook Ch 5 Functions Severance Ch 4: Functions","title":"Required Reading / Viewing"},{"location":"content/#large-group-video-lecture_4","text":"","title":"Large Group Video Lecture"},{"location":"content/#lab-walk-through_4","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice_4","text":"","title":"Homework Advice"},{"location":"content/#more-resources_4","text":"End to End Example: Functions, by Michael Fudge Python for Everybody: Ch4 Part 1 | Part 2 , by Charles Severance","title":"More Resources"},{"location":"content/#lesson-06-strings","text":"","title":"Lesson 06: Strings"},{"location":"content/#overview_5","text":"In this lesson we learn: Strings as an immutable sequence of characters. Index and Slice notation for retrieving sub-strings. Built-in string functions to perform operations on strings. Techniques for parsing and tokenizing string data. How to sanitize input with string functions.","title":"Overview"},{"location":"content/#required-reading-viewing_5","text":"ZyBook Ch 6: Strings Severance Ch 6: Strings","title":"Required Reading / Viewing"},{"location":"content/#large-group-video-lecture_5","text":"","title":"Large Group Video Lecture"},{"location":"content/#lab-walk-through_5","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice_5","text":"","title":"Homework Advice"},{"location":"content/#more-resources_5","text":"End to End Example: Strings, by Michael Fudge Python for Everybody: Ch6 Part 1 | Part 2 , by Charles Severance","title":"More Resources"},{"location":"content/#lesson-07-files","text":"","title":"Lesson 07: Files"},{"location":"content/#overview_6","text":"In this lesson we learn: The importance of a persistence layer in programming. How to read, write, and append to files. Techniques for reading a file a line at a time and all at once. Using exception handling with files. Text encodings.","title":"Overview"},{"location":"content/#required-reading-viewing_6","text":"ZyBook Ch 7: Files Severance Ch 7: Persistence","title":"Required Reading / Viewing"},{"location":"content/#large-group-video-lecture_6","text":"","title":"Large Group Video Lecture"},{"location":"content/#lab-walk-through_6","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice_6","text":"","title":"Homework Advice"},{"location":"content/#more-resources_6","text":"End to End Example: Files, by Michael Fudge Python for Everybody: Ch7 Part 1 | Part 2 , by Charles Severance","title":"More Resources"},{"location":"content/#lesson-08-lists","text":"In this lesson we learn: Lists as a mutable sequence of values. Indexing list values; slice notation. List functions and operations like add, remove, update, find Common patterns for list management. Parsing file data into lists.","title":"Lesson 08: Lists"},{"location":"content/#overview_7","text":"","title":"Overview"},{"location":"content/#required-reading-viewing_7","text":"ZyBook Ch 8: Lists Severance Ch 8: Lists","title":"Required Reading / Viewing"},{"location":"content/#large-group-video-lecture_7","text":"","title":"Large Group Video Lecture"},{"location":"content/#lab-walk-through_7","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice_7","text":"","title":"Homework Advice"},{"location":"content/#more-resources_7","text":"End to End Example: Lists, by Michael Fudge Python for Everybody: Ch8 Part 1 | Part 2 | Part 3 , by Charles Severance","title":"More Resources"},{"location":"content/#lesson-09-dictionaries","text":"","title":"Lesson 09: Dictionaries"},{"location":"content/#overview_8","text":"In this lesson we learn: Dictionaries as key-value pairs. Basic dictionary operations such as getting/setting keys and values Common dictionary use cases, such as representing complex objects. List of dictionary as an in-memory database of objects. Using the json library to serialize / de-serialize json data.","title":"Overview"},{"location":"content/#required-reading-viewing_8","text":"ZyBook Ch 9: Dictionaries Severance Ch 9: Dictionaries","title":"Required Reading / Viewing"},{"location":"content/#large-group-video-lecture_8","text":"","title":"Large Group Video Lecture"},{"location":"content/#lab-walk-through_8","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice_8","text":"","title":"Homework Advice"},{"location":"content/#more-resources_8","text":"End to End Example: Dictionaries, by Michael Fudge Python for Everybody: Ch9 Part 1 | Part 2 | Part 3 , by Charles Severance","title":"More Resources"},{"location":"content/#lesson-10-http","text":"","title":"Lesson 10: HTTP"},{"location":"content/#overview_9","text":"In this lesson we learn: Learn how HTTP, the protocol of the web works. To execute HTTP requests using Python requests De-serialize HTTP responses in JSON format into Python objects General procedure for reading and calling API\u2019s on the web.","title":"Overview"},{"location":"content/#required-reading-viewing_9","text":"Fudge: Web API\u2019s In Python (Part 1 and 2) Severance Ch 12: Networked Programs","title":"Required Reading / Viewing"},{"location":"content/#large-group-video-lecture_9","text":"","title":"Large Group Video Lecture"},{"location":"content/#lab-walk-through_9","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice_9","text":"","title":"Homework Advice"},{"location":"content/#more-resources_9","text":"End to End Example: Web API\u2019s, by Michael Fudge Python for Everybody: Ch12 Part 3 , by Charles Severance","title":"More Resources"},{"location":"content/#lesson-11-web-apis","text":"","title":"Lesson 11: Web API's"},{"location":"content/#overview_10","text":"In this lesson we learn: How to read and use documented Web API\u2019s Learn how to structure API calls GET/POST, in header, url or query string. How to perform API Authentication Via Key and OAUTH2 To read HTTP responses in body and headers General procedure for calling any web API.","title":"Overview"},{"location":"content/#required-reading-viewing_10","text":"Fudge: Web Api\u2019s In Python (Part 3 and 4) Severance Ch 13: Web Services ### Large Group Video Lecture","title":"Required Reading / Viewing"},{"location":"content/#lab-walk-through_10","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice_10","text":"","title":"Homework Advice"},{"location":"content/#more-resources_10","text":"End to End Example: Web API\u2019s, by Michael Fudge Python for Everybody: Ch13 Part 1 | Part 4 , by Charles Severance","title":"More Resources"},{"location":"content/#lesson-12-pandas","text":"","title":"Lesson 12: Pandas"},{"location":"content/#overview_11","text":"In this lesson we learn: What exactly is Pandas, What is data analysis? How can Pandas help you perform data analysis? Managing Pandas data structures. Using Pandas to read and write a variety of file formats.","title":"Overview"},{"location":"content/#required-reading-viewing_11","text":"Fudge: Data Analysis with Pandas Official Pandas Tutorials (optional)","title":"Required Reading / Viewing"},{"location":"content/#large-group-video-lecture_10","text":"","title":"Large Group Video Lecture"},{"location":"content/#lab-walk-through_11","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice_11","text":"","title":"Homework Advice"},{"location":"content/#more-resources_11","text":"End to End Example: Data Analysis in Pandas, by Michael Fudge Python for Data Analysis, by Sentdex","title":"More Resources"},{"location":"content/#lesson-13-visualization","text":"","title":"Lesson 13: Visualization"},{"location":"content/#overview_12","text":"In this lesson we learn: Why information visualization is important The various ways to visualize information The basic requirements for any visualization How to plot complex visualizations such as multi-series charts and maps","title":"Overview"},{"location":"content/#required-reading-viewing_12","text":"ZyBook Ch 10: Plotting","title":"Required Reading / Viewing"},{"location":"content/#large-group-video-lecture_11","text":"","title":"Large Group Video Lecture"},{"location":"content/#lab-walk-through_12","text":"","title":"Lab Walk Through"},{"location":"content/#homework-advice_12","text":"","title":"Homework Advice"},{"location":"content/#more-resources_12","text":"End to End Example: Mapping Potholes Matplotlib Tutorial Series","title":"More Resources"},{"location":"links/","text":"Course Links Here\u2019s a list of links to the resources we will use in this course. It is expected you will know how to access each of these resources. Tool Purpose Link Notes Blackboard Announcements, Grades, Project Deliverables https://blackboard.syr.edu Sign in with your NetId JupyterHub Python Programming, Code Samples, Slides, Labs, HW. https://hub.ischool.syr.edu Sign in with your NetId Microsoft Teams Ask questions. Chat with classmates & Instructors. Virtual office hours. https://teams.ist256.com Sign in with your SU Microsoft Account Polly In-Class polling for large group sessions. https://poll.ist256.com Sign in with SU Microsoft Account Severance Textbook The popular \u201cPython for Everyone\u201d book. https://www.py4e.com/book Available in a variety of Formats. Zoom Videoconferencing tool we use large and small group sessions. https://zoom.us Access through Blackboard Zybooks Textbook Our hands-on interactive textbook. Purchase online or via the SU bookstore. https://learn.zybooks.com Your syr.edu Zybooks account","title":"Course Links"},{"location":"links/#course-links","text":"Here\u2019s a list of links to the resources we will use in this course. It is expected you will know how to access each of these resources. Tool Purpose Link Notes Blackboard Announcements, Grades, Project Deliverables https://blackboard.syr.edu Sign in with your NetId JupyterHub Python Programming, Code Samples, Slides, Labs, HW. https://hub.ischool.syr.edu Sign in with your NetId Microsoft Teams Ask questions. Chat with classmates & Instructors. Virtual office hours. https://teams.ist256.com Sign in with your SU Microsoft Account Polly In-Class polling for large group sessions. https://poll.ist256.com Sign in with SU Microsoft Account Severance Textbook The popular \u201cPython for Everyone\u201d book. https://www.py4e.com/book Available in a variety of Formats. Zoom Videoconferencing tool we use large and small group sessions. https://zoom.us Access through Blackboard Zybooks Textbook Our hands-on interactive textbook. Purchase online or via the SU bookstore. https://learn.zybooks.com Your syr.edu Zybooks account","title":"Course Links"},{"location":"syllabus/","text":"IST256 Syllabus Spring 2022 Course Information IST256: Applications Programming for information Systems Audience This course is for students who are new to programming yet desire to learn how it applies to our everyday lives. Catalog Description Structured program design, development testing, implementation, and documentation of common information system applications using structured programming languages. Lectures and laboratory. Description Due to the prevalence of technology in our lives, learning to program has become the critical skill of the 21st century. Students will learn practical applications of computer programming such as how to automate tasks, manipulate data and solve problems applicable to almost any academic discipline. Learning Outcomes At the end of the course, students will be able to: Analyze complex problems by thinking computationally and systematically. Solve practical, real-world problems using a modern computer programming language.. Demonstrate the ability to read, write, discuss and code confidently. Understand how to code in teams, collaborate with others and manage source code. Acquire new programming knowledge independently. Large Group and Small Group Sections Every student in IST256 is assigned to the main section M001, then one of the recitation sections. You are required to attend both sections every week. Your recitation / Small Group instructor is responsible for your grades. SU Section Class # Type Instructor Instructor Email Meeting Day/Time Location / Instruction Mode M001 37649 Large Group Fudge Jr,Michael A mafudge@syr.edu Mondays 3:45pm - 5:05pm HBC Gifford Auditorium M002 37676 Small Group Sengupta,Subhasree susengup@syr.edu Wednesdays 12:45pm - 2:05pm Hinds Hall 027 M003 37652 Small Group Smith,Daniel V dvsmith@syr.edu Wednesdays 3:45pm - 5:05pm Hinds Hall 021 M004 37653 Small Group Nosky,Deborah L dlnosky@syr.edu Thursdays 11:00am - 12:20pm Hinds Hall 011 M005 37654 Small Group Nosky,Deborah L dlnosky@syr.edu Thursdays 2:00pm - 3:30pm Hinds Hall 011 M006 37655 Small Group Sengupta,Subhasree susengup@syr.edu Wednesdays 9:30am - 10:50am Hinds Hall 027 M007 37656 Small Group Brnger,Paige Marie pbrnger@syr.edu Wednesdays 3:45pm - 5:05pm Hinds Hall 111 M008 37683 Small Group Smith,Daniel V dvsmith@syr.edu Wednesdays 5:15pm - 6:35pm Hinds Hall 021 Office Hours Office hours are for asking questions, clearing up doubts and misunderstandings in the the coursework and getting advice / guidance on labs and homework. Please to not expect to be tutored during office hours, and please do not work on your homework during our office hours. Each of your instructor\u2019s Office Hours will be posted in Blackboard. If you require tutoring, please see the getting help section below. Understanding Approach Used in this Course Learning to program a computer does not come easy for most people. Decades of teaching programming to students like yourself has taught me it requires time, patience, practice and a well-established routine. This is not unlike the same routine required to learn a foreign language or musical instrument. There are times to practice and then times to demonstrate what you have learned. Forced Practice For better or worse, this course grading is designed to force you to practice. There are various activities due each week: readings, labs, and in-class / out-of-class homework activities. These are designed to expose you to programming little each day rather than binging the content once a week. Consuming the material this way gives you multiple points of exposure and most importantly time to process. Practice activities are effort graded. This means being correct carries the same weight as explaining your struggles when you know you are not correct and seeking help when you need it. Building Habit Through Routine Another thing we do to help you to be successful is to force a routine upon you. The course material is conceptually difficult so we try to remove some of the logistics from learning by providing the same structure week to week: Before LARGE GROUP lecture you are exposed to the topic through reading. The focus is on understanding the concepts. During LARGE GROUP lecture you observe and ask questions. Students do not write code at this point. The focus is on reading code, understanding the concepts as applied through code, and learning how the code executes. The LAB assignments force you to practice writing code for the first time. This is done in a guided fashion. You are given short, specific problems to solve with code. Guidance is provided to those who require it. The completed lab is submitted as evidence that you practiced and include what you have learned. During the SMALL GROUP lecture, we focus on problem solving and writing solutions with code. The problem at this phase are similar complexity as the homework. At this point every student should be writing code, learning to get comfortable writing code and troubleshooting problems. Code written in small group must be turned in for a participation grade. Finally, the HOMEWORK assignments are your opportunity to demonstrate you can code a solution to a problem on your own. Guidance is provided as to how to approach the problem. Homework assignments are a form of practice so it is expected students will explain what they learned or are still struggling to conceptualize. Assessments Assessments are no longer about practice. They are about demonstrating what you have learned. There are two types of assessments in this course EXAMS and a PROJECT. There are exams at quarterly milestones throughout the course and in the sprit of mastery, the lowest exam score is dropped. The project demonstrates you can learn to code independently, then explain your solution to another. Large Session Expectations The Monday\u2019s Large group session, section M001 in a large lecture hall. Because it can be intimidating to ask questions in this forum, you are encouraged to use the class chat offered for this course. The first slide at the beginning of large group will explain how to access the class chat. You are welcome, and encouraged to ask questions or for clarification of concepts during the lecture. You will be expected to engage in class by participating in class-wide polls, quizzes and surveys. Your responses are not graded but they are recorded as a means to measure your participation and engagement in class. Do NOT try to code as I code. Instead, watch and ask questions about what you see and experience. It\u2019s far too early for most learners to try and code as I code at this point, and there will be opportunities to do that in small group. Instead you should take nodes and ask questions. Except for the homework solution, the code I write will be made available to you after class. Small Group Expectations Small group sessions meet with a fraction of the class. Here you will practice programming and algorithmic problem solving. You are expected to bring your fully-charged laptop to class! You will need to use it to complete in-class exercises. If you do not have your laptop, then you are not prepared for class. You will be expected to participate in class. This includes sharing your thoughts, ideas, and computer code when you are asked. Some of you might be hesitant to do this, but you need to get over it for your own benefit. Nobody starts out programming as an expert. It takes practice, experimentation, and repeated failure to get it. Please be respectful of your instructor and classmates. You are not competing against each other, you are a community. Not everyone learns at the same pace and we should be kind and respectful to our classmates who struggle. Course Resources Course Website Our course website it located at https://ist256.com or https://ist256.github.io . The course website contains the syllabus, list of due dates, and links to readings, content, videos and tools used in the course. Jupyterhub Our programming environment is a private-cloud web application called Jupyter Hub. https://hub.ischool.syr.edu . This is the de-facto programming environment for data scientists. All students have an account; use your SU NetID and password to login. After you login you will see a library folder inside that folder is an ist256 folder. All of the course content (lecuture slides, code samples, labs, homework) is available in this folder. Textbooks The following texts are required : Programming in Python 3 an Interactive Textbook https://learn.zybooks.com/ . Must be purchased online or through the SU bookstore. Student cost is $58. Your use of this book will be tracked and counts towards your grade. Python for Everybody: Exploring Data In Python 3 by Charles Severance. https://www.py4e.com/book . Free. Here are some additional free textbook recommendations . Consider these supplemental resources: Automate the Boring Stuff with Python: Practical Programming for Total Beginners by Al Sweigert https://automatetheboringstuff.com/ . A Byte of Python , https://www.gitbook.com/book/swaroopch/byte-of-python/details Dive into Python , Mark Pilgrim http://getpython3.com/diveintopython3/ Learn python the hard way , Zed Shaw http://learnpythonthehardway.org/book/ Python Practice Book , Anad Chitpothu http://anandology.com/python-practice-book/index.html Activating Your Zybook Go to: https://learn.zybooks.com/ Create Your Account. Make sure to sign up with your @syr.edu email address. NOTE: If you do not use your SU Email, our bot cannot track your book usage. When prompted for the Zybook code, enter SYRIST256Spring2022 You can purchase the Zybook online with a credit card, or purchase through the bookstore and receive an access code. NetID, Google and Microsoft Accounts This course will require you to use your Syracuse University provided Google and Microsoft Accounts. Both accounts are based on your NetId. Your Google account is netid@g.syr.edu and your Microsoft Account is netid@syr.edu . Learn more: NetID: https://netid.syr.edu/ Microsoft Account: Login in with your SU email address and NetID password. SU Google Account: https://ols.syr.edu/google-account-for-syracuse-university/ 3rd Party Services Used in This Course This course uses a variety of 3rd party services to supplement and enhance your learning experience. Here\u2019s a list of with links to the resources we will use in this course. It is expected you will know how to access each of these resources. Tool Purpose Link Notes Blackboard Announcements, Grades https://blackboard.syr.edu Sign in with your NetId JupyterHub Python Programming, Code Samples, Slides, Labs, HW. https://hub.ischool.syr.edu Sign in with your NetId Microsoft Teams Chat with classmates / Instructors. Virtual office hours. https://teams.ist256.com Sign in with your SU Microsoft Account Polly In-Class polling for large group sessions. https://poll.ist256.com Sign in with SU Microsoft Account Severance Textbook The popular \u201cPython for Everyone\u201d book. https://www.py4e.com/book Available in a variety of different formats. Zoom Videoconferencing tool we use for office hours and student support. https://zoom.us Access through Blackboard Zybooks Textbook Our hands-on interactive textbook. Purchase online or via the SU bookstore. https://learn.zybooks.com Your syr.edu Zybooks account Please consult the Course Links section for details. Bring Your Own Device This course uses the BYOD (Bring Your Own Device) model. For Large Group you need a device to ask and answer questions, basically to participate in group chat and polls (Polly). This can be a smartphone, tablet or laptop (Mac, Windows, or Chromebook). Do not try to code along in large group unless you are experienced. It is best to take notes and ask questions. For Small Group you need a device for which you can write code in the browser using Jupyter Hub. This should be a laptop computer (Mac, Windows or Chromebook). Tutoring The University offers free tutoring for this course through the Center for Learning and Student Success (CLASS). Sign up for tutoring at: http://myt.syr.edu . For more information on individual and group tutoring sessions, please visit: https://class.syr.edu/academic-support/ Methods of Evaluation Grading This course uses a well thought out mix of individual, group, in-class and out-of-class instruments to assess your knowledge acquisition. A variety of techniques are used to cater to students of different learning styles and assess the course learning outcomes. Assessment Name Blackboard Gradebook Type Learning Outcomes Quantity Points Each Points Total Pct Of Total Grade How Do I Turn it in? Exams E1 - E4 Assessment 1,2,3 4 (3 best count) 30 90 36% Exams Section on Blackboard Project P1 - P4 Assessment 1,2,3,5 1 (Split in 4 Phases) 49 49 20% Project folder on Jupyterhub Zybook Participation Z01 - Z10 Practice 1,2,3 10 2 20 9% Just Read the assigned chapter on the Zybooks Website. Class Coding Labs L01 - L13 Practice 1,2,3,4 13 3 39 16% Run the submission script at end of the Lab in Jupyterhub Homework H01 - H13 Practice 1,2,3,4 13 3 39 16% Run the submission script at end of the Homework in Jupyterhub Small Group Code S01 - S13 Practice 1,2,3 13 1 13 5% Turn in code your code after your small group session. TOTAL 250 For due dates and times for all assignments, consult the What\u2019s Due? section of the Course Schedule . Exams (E1 - E4) Exams are high-stakes assessments. They measure the individual\u2019s ability to recall, understand, and apply the course material. They are one of two instruments in this course which measures your mastery of the learning outcomes. There will be four exams in the course. Your best three scores count towards your final grade, offering you an opportunity to achieve mastery over the material, should you perform poorly on one. Each exam focuses on specific lessons, but due to the nature of the course material, all exams are cumulative. Exams are issued online via blackboard outside of class. You may take the exam anytime and from anywhere on the exam date. Once you start the exam you must complete it in a single session. You get one exam attempt. Do not start until you are ready to take the exam. Exams are timed at 15 minutes and will auto-submit when time is up. Questions consist of multiple choice, and fill-in-the blank. Questions are delivered at random from a pool of questions, one question at a time. This is to mitigate cheating on the exam and copying of code into Python. Since everyone has a 24 hour window to complete the exam, there are no re-issues or make-ups. To prevent building of test banks, answers to the exams will not be released. You may ask in office hours to see your exam. Project (P1 - P4) The project is the other high-stakes assessment. The goal of the project is to demonstrate your ability as an individual to program something novel, useful and innovative in Python. It should represent an accurate culmination of what you have learned in the course. You will work on the project individually, be expected to produce working code, and be able to explain it at both a high and detailed level. The project is divided into 4 phases; due dates are posted on the course schedule. You will receive feedback and advice after the first two deliverables; a project grade after the final deliverable. Each project phase must be submitted on Jupyterhub using the provided submission notebook. Late submissions are accepted but will impact your project grade severely. Project Phases Phase Name Deliverables P1 Ideation Outline the specific goals and objectives of your project; include evidence of its feasibility by including citations of resources you will use to complete the code. P2 Beta Version Create a first working draft of the completed program i.e. the \u201cBeta\u201d version; Provide live demo of running program to your small group instructor for feedback. P3 Final Version Final version of working code; Instructor feedback taken into consideration; Improvements to achieve the desired grade. P4 Demo and Reflection Pitch / Demo video of running project program. Video reflection; Criteria for Project Grade Complete all project deliverables on time, and to satisfaction as per the requirements. Clearly demonstrate through code 3 things you learned beyond what was taught in class. This can be a new API, module, aspect of or aspect of the Python language itself. This goes beyond just use, you must identify and explain. Take instructor feedback into consideration. Journal as your work on your project, recording time and tasks. In addition, there is a grade limit based on the number of lines of student-written code that is used in the project. Note: copies of code from class or elsewhere do not count. This must be code you wrote yourself that directly impacts the project\u2019s behavior. Lines of student-written code in the project Maximum Possible grade 200 or more A+ 100 to 200 B+ Under 100 C+ Grading Scale For Project Finally, you are assigned a letter grade for your project. This letter grade is translated to a number of points based on this table. Project Grade Assigned Points A+ 49 A 47 A- 45 B+ 42 B 40 B- 37 C+ 35 C 32 C- 30 D+ 27 D 25 D- 20 F 0 Specifics on the project as well as details of each deliverable can be found under your project folder in Jupyterhub. Zybook Participation (Z01 - Z10) The Zybook https://learn.zybooks.com/ interactive textbook is an excellent resource for learning Python. As such, your use of this resource will be graded. This is a low-stakes assessment which is mostly participatory. For most lessons, relevant Zybook chapters are assigned on the course schedule . As you complete the exercises and readings, your activity is recorded. This is how your grade is determined, which is then posted to Blackboard. Only the readings and participation activities are graded. The challenge activities and labs are optional. You do not need to complete them and they are not part of your Zybook participation grade. Be sure to complete the activities prior to the due date. Rubric for Zybook Participation Amount of the chapter you\u2019ve completed before due date Assigned Grade 100% 2 75% or more 1 Less than 75% 0 Class Coding Labs (L01 - L13) Each week there will be an out-of-class hands-on lab programming activity. The purpose of the lab is to provide guided, hands-on programming practice. Labs are your first opportunity to get your hands on a keyboard and start programming. This is a low-stakes assessment, mostly participatory. The What\u2019s Due section of the syllabus identifies the lab you should complete. You can find the lab activity on JupyterHub. This activity must be completed and turned submitted by the due date. You may work alone or with a partner as you complete the lab. If you work with another, you should both complete the lab individually, and you should make a note of who your lab partner was when you completed your work. As to not draw attention to a potential academic integrity violation. If you are having difficulty completing the lab, you are welcome to review the walk-through video which guides you through the more difficult parts of the lab. You are encouraged to only consult the walk-through when you are stuck. Rubric for Class Coding Labs Lab Criteria Definitions: Code Correct means all You Code sections of the lab are correct. Code Complete means all You Code sections have an honest attempt to code the problem at hand. Please note this does not imply the code is correct. If the code is not correct, there is an adequate reflection with student questions. Cells Executed means all code cells in the lab display evidence they were executed in your lab submission. Metacognition Complete means the student made an honest effort to answer the open-ended questions in the lab adequately conveying what you have learned and what still confuses you. This should be evident in the work you have done to complete the lab. Lab Criteria Assigned Grade All 4 criteria met 3 3 criteria met 2 2 criteria met 1 Less than 2 criteria met 0 Homework (H01 - H13) Practice makes perfect. Each week you will be assigned homework to complete outside of class. The goal of the homework is practice problem solving with code independently. Throughout the process you should take inventory of your abilities with respect to the material. While it is admirable to get the code correct, that is not the evaluation criteria nor is it the purpose of the homework. You should use the homework as a personal gauge for how well you are grasping the material. You can find the the homework assignments on JupyterHub. The What\u2019s Due section of the syllabus identifies the homework assignment you should complete. Homework are individual assignments . You can collaborate on strategy but you must must work alone on the assignment. You must be able to explain the code you write, or it will be considered an academic integrity violation. It\u2019s not about getting it right, but it is about making an honest self-assessment! For each homework there is an advice video which provides hints and tips for how you can approach the homework assignment. You are encouraged to only consult the video when you are having difficulty with the homework. If you get assistance from somewhere else, such as online, or someone else such as a tutor, you must divulge that in your submission or it will be considered an academic integrity violation. Rubric for Homework Homework Criteria Definitions: Code Correct means an honest attempt was made at a solution and the solution is correct. For incorrect solutions, the code runs, might not be correct, but there is some explanation in the reflection. Code Well Written means your code is easy to understand, modular in nature, has aptly named variables, was programmed in the style we learned in class, and demonstrates what you learned that week. Problem Analysis Complete problem analysis was complete, identifying the problem\u2019s inputs, outputs, and algorithm. An outline of the step-by-step process for how the program should behave. Questions Complete means the student made an honest effort to answer the open-ended questions in the lab. Reflection Complete means the student completed their code reflection, discussing their experiences with completing the assignment. This should provide insight as to how the work was done touching upon struggles, how you got it done, what was learned in the process. Homework Criteria Assigned Grade All 5 criteria met 3 4 criteria met 2 3 criteria met 1 Less than 3 criteria met 0 Small Group Code (S01 - S13) Your small group instructor will measure attendance and participation each session through you turning in your small group code. This is the code we worked on in class together. The specific criteria is entirely at the discretion of your small group instructor, but mainly consists participating in small group through coding effort. Grading Scale For Final Grade We use the following grading scale for translating your total points earned into a letter grade to be submitted to the University registrar. Student Achievement Total Points Earned Registrar Grade Grade Points Mastery 238 - 250 A 4.000 225 - 237 A- 3.666 Satisfactory 213 - 224 B+ 3.333 200 - 212 B 3.000 188 - 199 B- 2.666 Low Passing 175 - 187 C+ 2.333 163 - 174 C 2.000 151 - 162 C- 1.666 Unsatisfactory 125 - 150 D 1.000 0 - 124 F 0.000 Course Specific Policies Due Dates Due dates are posted on the Syllabus in the course schedule section, specifically What\u2019s Due? . Due dates are also posted in Blackboard. In order to provide timely and relevant feedback, no late work is accepted. Exceptions will only be made under extreme circumstances with supporting University documentation of illness or personal reasons. Extra Credit No extra credit is offered in this course. Course Honor Code The course honor code represents our commitment to Academic Integrity in a programming course. I drafted the class honor code to avoid academic negligence - situations where students are unaware that their actions are actually a form of cheating. Our honor code remedies this problem by clearly stating the expectations of Academic Integrity for this course. It states: All work is my own . Answers on all student work, assignments (labs, homework, problem sets, projects, papers, etc\u2026) and assessments (quizzes, exams, tests, etc\u2026) are my own individual work (except where collaboration is explicitly permitted). In the case where collaboration is permitted I will only collaborate within my team. Your own work means it manifests your own thoughts and ideas, not someone else! I will not share answers. I will not make answers (either my own or the professor\u2019s) to work, assignments (labs, problem sets, projects, papers, homework, etc\u2026) and assessments (quizzes, exams, tests, etc\u2026) available to anyone else in or out of class. This includes posting them on the web or sharing them in test banks. I will not misrepresent my ability. I will not engage in any activity which misrepresents or falsifies my knowledge of the subject matter and therefore improves my grade dishonestly. This includes unsanctioned test aids, copying homework, and assistance from unapproved sources outside of class. I will give credit. I will always pay attribution to my sources, and not misrepresent the works of others as my own. If you get code from the internet, you must cite it like you would any source in an academic paper. I accept the honor code and its consequences. I understand and accept that that all work I submit is subject to the honor code, and if I violate this honor code I my instructor is obligated to report me to the University\u2019s office of Academic Integrity. When in doubt, ask. When unsure, disclose openly. Most students who get into trouble are trying to hide their academic dishonesty. Don\u2019t do that. We will catch you easily. Sanctions for Violations of Academic Integrity All suspected academic integrity violations will be reported to the university\u2019s office of academic integrity. Proposed sanction for violations of a low-stakes assessment such as a homework assignment or lab, is a grade of zero. Proposed sanction for violations on high-stakes assessment such as a quiz, exam or the final project is a grade of F in the course. Syracuse University Policies Syracuse University has a variety of other policies designed to guarantee that students live and study in a community respectful of their needs and those of fellow students. Some of the most important of these concern: Diversity and Disability (ensuring that students are aware of their rights and responsibilities in a diverse, inclusive, accessible, bias-free campus community) can be found here, at: https://www.syracuse.edu/life/accessibilitydiversity/ . Religious Observances Notification and Policy (steps to follow to request accommodations for the observance of religious holidays) can be found here, at: http://supolicies.syr.edu/studs/religious_observance.htm Orange SUccess (tools to access a variety of SU resources, including ways to communicate with advisors and faculty members) can be found here, at: http://orangesuccess.syr.edu/getting-started-2 . Disability-Related Accommodations Syracuse University values diversity and inclusion; we are committed to a climate of mutual respect and full participation. There may be aspects of the instruction or design of this course that result in barriers to your inclusion and full participation in this course. I invite any student to meet with me to discuss strategies and/or accommodations (academic adjustments) that may be essential to your success and to collaborate with the Center for Disability Resources (CDR) in this process. If you would like to discuss disability-accommodations or register with CDR, please visit Center for Disability Resources. Please call (315) 443-4498 or email disabilityresources@syr.edu for more detailed information. CDR is responsible for coordinating disability-related academic accommodations and will work with the student to develop an access plan. Since academic accommodations may require early planning and generally are not provided retroactively, please contact CDR as soon as possible to begin this process. https://disabilityresources.syr.edu/ University Attendance Policy Attendance in classes is expected in all courses at Syracuse University. Students are expected to arrive on campus in time to attend the first meeting of all classes for which they are registered. Students who do not attend classes starting with the first scheduled meeting may be academically withdrawn as not making progress toward degree by failure to attend. Instructors set course-specific policies for absences from scheduled class meetings in their syllabi. It is a federal requirement that students who do not attend or cease to attend a class to be reported at the time of determination by the faculty. Faculty should use \u201cESPR\u201d and \u201cMSPR\u201d in Orange Success to alert the Office of the Registrar and the Office of Financial Aid. A grade of NA is posted to any student for whom the Never Attended flag is raised in Orange SUccess. More information regarding Orange SUccess can be found here, at: http://orangesuccess.syr.edu/getting-started-2/ Students should also review the University\u2019s religious observance policy and make the required arrangements at the beginning of each semester Academic Integrity Policy Syracuse University\u2019s Academic Integrity Policy reflects the high value that we, as a university community, place on honesty in academic work. The policy defines our expectations for academic honesty and holds students accountable for the integrity of all work they submit. Students should understand that it is their responsibility to learn about course-specific expectations, as well as about university-wide academic integrity expectations. The policy governs appropriate citation and use of sources, the integrity of work submitted in exams and assignments, and the veracity of signatures on attendance sheets and other verification of participation in class activities. The policy also prohibits students from submitting the same work in more than one class without receiving written authorization in advance from both instructors. Under the policy, students found in violation are subject to grade sanctions determined by the course instructor and nongrade sanctions determined by the School or College where the course is offered as described in the Violation and Sanction Classification Rubric. SU students are required to read an online summary of the University\u2019s academic integrity expectations and provide an electronic signature agreeing to abide by them twice a year during pre-term check-in on MySlice. Use of Blackboard This course involves the use of Syracuse University\u2019s Blackboard system as an online tool. The environment is composed of a number of elements that will help you be successful in both your current coursework and your lifelong learning opportunities. To access Blackboard, http://blackboard.syr.edu use your Syracuse University NetID & Password. This specific course will appear in your course list. To search for answers to your Blackboard questions, visit the Answers self-help knowledge https://answers.syr.edu/display/blackboard01/Blackboard . If you have problems logging in or need assistance with Blackboard, contact the ITS Service Center at: help@syr.edu or 315.443.2677. The Syracuse University Blackboard support team will assist you. Course Schedule Dates Topic (Click Link for Content) 1/24 - 1/30 Lesson 01: Introduction to Python Programming 1/31- 2/6 Lesson 02: Input, Output, Variables and Types 2/7 - 2/13 Lesson 03: Conditionals 2/14 - 2/20 Lesson 04: Iterations 2/21 - 2/27 Lesson 05: User-defined Functions, Modules 2/28 - 3/6 Lesson 06: Strings and Text Processing 3/7 - 3/13 Lesson 07: File I/O and Persistence 3/14 - 3/20 No Classes - Spring Break 3/21 - 3/27 Lesson 08: Lists 3/28 - 4/3 Lesson 09: Dictionaries and JSON 4/4 - 4/10 Lesson 10: HTTP Protocol and Network Programming 4/11 - 5/17 Lesson 11: Web API\u2019s 4/18 - 4/24 Lesson 12: Data Analysis with Pandas 4/25 - 5/1 Lesson 13: Data Visualization 5/2 - 5/8 Project Week (No Large Group Meeting, Meet Small Group Online for P2) What\u2019s Due? Use this table to track the due dates of the out-of-class deliverables in this course. Dates and times are Eastern Time Zone. Date Due Time Due Gradebook Points Tool What is Due? 1/29/2022 11:59 PM Z01 2 Zybooks Chapter 1 1/29/2022 11:59 PM L01 3 Jupyterhub 01-Intro/LAB-Intro.ipynb 1/29/2022 11:59 PM S01 1 Jupyterhub 01-Intro/SmallGroup-Intro.ipynb 1/29/2022 11:59 PM H01 3 Jupyterhub 01-Intro/HW-Intro.ipynb 1/31/2022 3:00 PM Z02 2 Zybooks Chapter 2 2/1/2022 11:59 PM L02 3 Jupyterhub 02-Variables/LAB-Variables.ipynb 2/2/2022 11:59 PM S02 1 Jupyterhub 02-Variables/SmallGroup-Variables.ipynb 2/5/2022 11:59 PM H02 3 Jupyterhub 02-Variables/HW-Variables.ipynb 2/7/2022 3:00 PM Z03 2 Zybooks Chapter 3 2/8/2022 11:59 PM L03 3 Jupyterhub 03-Conditionals/LAB-Conditionals.ipynb 2/9/2022 11:59 PM S03 1 Jupyterhub 03-Conditionals/SmallGroup-Conditionals.ipynb 2/12/2022 11:59 PM H03 3 Jupyterhub 03-Conditionals/HW-Conditionals.ipynb 2/14/2022 3:00 PM Z04 2 Zybooks Chapter 4 2/15/2022 11:59 PM L04 3 Jupyterhub 04-Iterations/LAB-Iterations.ipynb 2/16/2022 11:59 PM S04 1 Jupyterhub 04-Iterations/SmallGroup-Iterations.ipynb 2/18/2022 11:59 PM E1 30 Blackboard Exam 1 (Focus on Lessons 01-03) 2/19/2022 11:59 PM H04 3 Jupyterhub 04-Iterations/HW-Iterations.ipynb 2/21/2022 3:00 PM Z05 2 Zybooks Chapter 5 2/22/2022 11:59 PM L05 3 Jupyterhub 05-Functions/LAB-Functions.ipynb 2/23/2022 11:59 PM S05 1 Jupyterhub 05-Functions/SmallGroup-Functions.ipynb 2/26/2022 11:59 PM H05 3 Jupyterhub 05-Functions/HW-Functions.ipynb 2/28/2022 3:00 PM Z06 2 Zybooks Chapter 6 3/1/2022 11:59 PM L06 3 Jupyterhub 06-Strings/LAB-Strings.ipynb 3/2/2022 11:59 PM S06 1 Jupyterhub 06-Strings/SmallGroup-Strings.ipynb 3/5/2022 11:59 PM H06 3 Jupyterhub 06-Strings/HW-Strings.ipynb 3/7/2022 3:00 PM Z07 2 Zybooks Chapter 7 3/8/2022 11:59 PM L07 3 Jupyterhub 07-Files/LAB-Files.ipynb 3/9/2022 11:59 PM S07 1 Jupyterhub 07-Files/SmallGroup-Files.ipynb 3/19/2022 11:59 PM H07 3 Jupyterhub 07-Files/HW-Files.ipynb 3/21/2022 3:00 PM Z08 2 Zybooks Chapter 8 3/22/2022 11:59 PM L08 3 Jupyterhub 08-Lists/LAB-Lists.ipynb 3/23/2022 11:59 PM S08 1 Jupyterhub 08-Lists/SmallGroup-Lists.ipynb 3/25/2022 11:59 PM E2 30 Blackboard Exam 2 (Focus on Lessons 04-07) 3/26/2022 11:59 PM H08 3 Jupyterhub 08-Lists/HW-Lists.ipynb 3/28/2022 3:00 PM Z09 2 Zybooks Chapter 9 3/29/2022 11:59 PM L09 3 Jupyterhub 09-Dictionaries/LAB-Dictionaries.ipynb 3/30/2022 11:59 PM S09 1 Jupyterhub 09-Dictionaries/SmallGroup-Dictionaries.ipynb 4/2/2022 11:59 PM H09 3 Jupyterhub 09-Dictionaries/HW-Dictionaries.ipynb 4/5/2022 11:59 PM L10 3 Jupyterhub 10-HTTP/LAB-HTTP.ipynb 4/6/2022 11:59 PM S10 1 Jupyterhub 10-HTTP/SmallGroup-HTTP.ipynb 4/9/2022 11:59 PM H10 3 Jupyterhub 10-HTTP/HW-HTTP.ipynb 4/12/2022 11:59 PM L11 3 Jupyterhub 11-WebAPIs/LAB-WebAPIs.ipynb 4/13/2022 11:59 PM S11 1 Jupyterhub 11-WebAPIs/SmallGroup-WebAPIs.ipynb 4/15/2022 11:59 PM E3 30 Blackboard Exam 3 (Focus on Lessons 08-10) 4/16/2022 11:59 PM H11 3 Jupyterhub 11-WebAPIs/HW-WebAPIs.ipynb 4/19/2022 11:59 PM L12 3 Jupyterhub 12-Pandas/LAB-Pandas.ipynb 4/20/2022 11:59 PM S12 1 Jupyterhub 12-Pandas/SmallGroup-Pandas.ipynb 4/23/2022 11:59 PM H12 3 Jupyterhub 12-Pandas/HW-Pandas.ipynb 4/24/2022 11:59 PM P1 0 Jupyterhub project/P1.ipynb 4/25/2022 3:00 PM Z10 2 Zybooks Chapter 10 4/26/2022 11:59 PM L13 3 Jupyterhub 13-Visualization/LAB-Visualization.ipynb 4/27/2022 11:59 PM S13 1 Jupyterhub 13-Visualization/SmallGroup-Visualization.ipynb 4/30/2022 11:59 PM H13 3 Jupyterhub 13-Visualization/HW-Visualization.ipynb 5/2/2022 11:59 PM E4 30 Blackboard Exam 4 (Focus on Lessons 11-13) 5/4/2022 11:59 PM P2 0 Jupyterhub project/P2.ipynb 5/10/2022 11:59 PM P3 0 Jupyterhub project/P3.ipynb 5/10/2022 11:59 PM P4 49 Jupyterhub project/P4.ipynb","title":"Syllabus"},{"location":"syllabus/#ist256-syllabus-spring-2022","text":"","title":"IST256 Syllabus Spring 2022"},{"location":"syllabus/#course-information","text":"IST256: Applications Programming for information Systems","title":"Course Information"},{"location":"syllabus/#audience","text":"This course is for students who are new to programming yet desire to learn how it applies to our everyday lives.","title":"Audience"},{"location":"syllabus/#catalog-description","text":"Structured program design, development testing, implementation, and documentation of common information system applications using structured programming languages. Lectures and laboratory.","title":"Catalog Description"},{"location":"syllabus/#description","text":"Due to the prevalence of technology in our lives, learning to program has become the critical skill of the 21st century. Students will learn practical applications of computer programming such as how to automate tasks, manipulate data and solve problems applicable to almost any academic discipline.","title":"Description"},{"location":"syllabus/#learning-outcomes","text":"At the end of the course, students will be able to: Analyze complex problems by thinking computationally and systematically. Solve practical, real-world problems using a modern computer programming language.. Demonstrate the ability to read, write, discuss and code confidently. Understand how to code in teams, collaborate with others and manage source code. Acquire new programming knowledge independently.","title":"Learning Outcomes"},{"location":"syllabus/#large-group-and-small-group-sections","text":"Every student in IST256 is assigned to the main section M001, then one of the recitation sections. You are required to attend both sections every week. Your recitation / Small Group instructor is responsible for your grades. SU Section Class # Type Instructor Instructor Email Meeting Day/Time Location / Instruction Mode M001 37649 Large Group Fudge Jr,Michael A mafudge@syr.edu Mondays 3:45pm - 5:05pm HBC Gifford Auditorium M002 37676 Small Group Sengupta,Subhasree susengup@syr.edu Wednesdays 12:45pm - 2:05pm Hinds Hall 027 M003 37652 Small Group Smith,Daniel V dvsmith@syr.edu Wednesdays 3:45pm - 5:05pm Hinds Hall 021 M004 37653 Small Group Nosky,Deborah L dlnosky@syr.edu Thursdays 11:00am - 12:20pm Hinds Hall 011 M005 37654 Small Group Nosky,Deborah L dlnosky@syr.edu Thursdays 2:00pm - 3:30pm Hinds Hall 011 M006 37655 Small Group Sengupta,Subhasree susengup@syr.edu Wednesdays 9:30am - 10:50am Hinds Hall 027 M007 37656 Small Group Brnger,Paige Marie pbrnger@syr.edu Wednesdays 3:45pm - 5:05pm Hinds Hall 111 M008 37683 Small Group Smith,Daniel V dvsmith@syr.edu Wednesdays 5:15pm - 6:35pm Hinds Hall 021","title":"Large Group and Small Group Sections"},{"location":"syllabus/#office-hours","text":"Office hours are for asking questions, clearing up doubts and misunderstandings in the the coursework and getting advice / guidance on labs and homework. Please to not expect to be tutored during office hours, and please do not work on your homework during our office hours. Each of your instructor\u2019s Office Hours will be posted in Blackboard. If you require tutoring, please see the getting help section below.","title":"Office Hours"},{"location":"syllabus/#understanding-approach-used-in-this-course","text":"Learning to program a computer does not come easy for most people. Decades of teaching programming to students like yourself has taught me it requires time, patience, practice and a well-established routine. This is not unlike the same routine required to learn a foreign language or musical instrument. There are times to practice and then times to demonstrate what you have learned.","title":"Understanding Approach Used in this Course"},{"location":"syllabus/#forced-practice","text":"For better or worse, this course grading is designed to force you to practice. There are various activities due each week: readings, labs, and in-class / out-of-class homework activities. These are designed to expose you to programming little each day rather than binging the content once a week. Consuming the material this way gives you multiple points of exposure and most importantly time to process. Practice activities are effort graded. This means being correct carries the same weight as explaining your struggles when you know you are not correct and seeking help when you need it.","title":"Forced Practice"},{"location":"syllabus/#building-habit-through-routine","text":"Another thing we do to help you to be successful is to force a routine upon you. The course material is conceptually difficult so we try to remove some of the logistics from learning by providing the same structure week to week: Before LARGE GROUP lecture you are exposed to the topic through reading. The focus is on understanding the concepts. During LARGE GROUP lecture you observe and ask questions. Students do not write code at this point. The focus is on reading code, understanding the concepts as applied through code, and learning how the code executes. The LAB assignments force you to practice writing code for the first time. This is done in a guided fashion. You are given short, specific problems to solve with code. Guidance is provided to those who require it. The completed lab is submitted as evidence that you practiced and include what you have learned. During the SMALL GROUP lecture, we focus on problem solving and writing solutions with code. The problem at this phase are similar complexity as the homework. At this point every student should be writing code, learning to get comfortable writing code and troubleshooting problems. Code written in small group must be turned in for a participation grade. Finally, the HOMEWORK assignments are your opportunity to demonstrate you can code a solution to a problem on your own. Guidance is provided as to how to approach the problem. Homework assignments are a form of practice so it is expected students will explain what they learned or are still struggling to conceptualize.","title":"Building Habit Through Routine"},{"location":"syllabus/#assessments","text":"Assessments are no longer about practice. They are about demonstrating what you have learned. There are two types of assessments in this course EXAMS and a PROJECT. There are exams at quarterly milestones throughout the course and in the sprit of mastery, the lowest exam score is dropped. The project demonstrates you can learn to code independently, then explain your solution to another.","title":"Assessments"},{"location":"syllabus/#large-session-expectations","text":"The Monday\u2019s Large group session, section M001 in a large lecture hall. Because it can be intimidating to ask questions in this forum, you are encouraged to use the class chat offered for this course. The first slide at the beginning of large group will explain how to access the class chat. You are welcome, and encouraged to ask questions or for clarification of concepts during the lecture. You will be expected to engage in class by participating in class-wide polls, quizzes and surveys. Your responses are not graded but they are recorded as a means to measure your participation and engagement in class. Do NOT try to code as I code. Instead, watch and ask questions about what you see and experience. It\u2019s far too early for most learners to try and code as I code at this point, and there will be opportunities to do that in small group. Instead you should take nodes and ask questions. Except for the homework solution, the code I write will be made available to you after class.","title":"Large Session Expectations"},{"location":"syllabus/#small-group-expectations","text":"Small group sessions meet with a fraction of the class. Here you will practice programming and algorithmic problem solving. You are expected to bring your fully-charged laptop to class! You will need to use it to complete in-class exercises. If you do not have your laptop, then you are not prepared for class. You will be expected to participate in class. This includes sharing your thoughts, ideas, and computer code when you are asked. Some of you might be hesitant to do this, but you need to get over it for your own benefit. Nobody starts out programming as an expert. It takes practice, experimentation, and repeated failure to get it. Please be respectful of your instructor and classmates. You are not competing against each other, you are a community. Not everyone learns at the same pace and we should be kind and respectful to our classmates who struggle.","title":"Small Group Expectations"},{"location":"syllabus/#course-resources","text":"","title":"Course Resources"},{"location":"syllabus/#course-website","text":"Our course website it located at https://ist256.com or https://ist256.github.io . The course website contains the syllabus, list of due dates, and links to readings, content, videos and tools used in the course.","title":"Course Website"},{"location":"syllabus/#jupyterhub","text":"Our programming environment is a private-cloud web application called Jupyter Hub. https://hub.ischool.syr.edu . This is the de-facto programming environment for data scientists. All students have an account; use your SU NetID and password to login. After you login you will see a library folder inside that folder is an ist256 folder. All of the course content (lecuture slides, code samples, labs, homework) is available in this folder.","title":"Jupyterhub"},{"location":"syllabus/#textbooks","text":"The following texts are required : Programming in Python 3 an Interactive Textbook https://learn.zybooks.com/ . Must be purchased online or through the SU bookstore. Student cost is $58. Your use of this book will be tracked and counts towards your grade. Python for Everybody: Exploring Data In Python 3 by Charles Severance. https://www.py4e.com/book . Free. Here are some additional free textbook recommendations . Consider these supplemental resources: Automate the Boring Stuff with Python: Practical Programming for Total Beginners by Al Sweigert https://automatetheboringstuff.com/ . A Byte of Python , https://www.gitbook.com/book/swaroopch/byte-of-python/details Dive into Python , Mark Pilgrim http://getpython3.com/diveintopython3/ Learn python the hard way , Zed Shaw http://learnpythonthehardway.org/book/ Python Practice Book , Anad Chitpothu http://anandology.com/python-practice-book/index.html","title":"Textbooks"},{"location":"syllabus/#activating-your-zybook","text":"Go to: https://learn.zybooks.com/ Create Your Account. Make sure to sign up with your @syr.edu email address. NOTE: If you do not use your SU Email, our bot cannot track your book usage. When prompted for the Zybook code, enter SYRIST256Spring2022 You can purchase the Zybook online with a credit card, or purchase through the bookstore and receive an access code.","title":"Activating Your Zybook"},{"location":"syllabus/#netid-google-and-microsoft-accounts","text":"This course will require you to use your Syracuse University provided Google and Microsoft Accounts. Both accounts are based on your NetId. Your Google account is netid@g.syr.edu and your Microsoft Account is netid@syr.edu . Learn more: NetID: https://netid.syr.edu/ Microsoft Account: Login in with your SU email address and NetID password. SU Google Account: https://ols.syr.edu/google-account-for-syracuse-university/","title":"NetID, Google and Microsoft Accounts"},{"location":"syllabus/#3rd-party-services-used-in-this-course","text":"This course uses a variety of 3rd party services to supplement and enhance your learning experience. Here\u2019s a list of with links to the resources we will use in this course. It is expected you will know how to access each of these resources. Tool Purpose Link Notes Blackboard Announcements, Grades https://blackboard.syr.edu Sign in with your NetId JupyterHub Python Programming, Code Samples, Slides, Labs, HW. https://hub.ischool.syr.edu Sign in with your NetId Microsoft Teams Chat with classmates / Instructors. Virtual office hours. https://teams.ist256.com Sign in with your SU Microsoft Account Polly In-Class polling for large group sessions. https://poll.ist256.com Sign in with SU Microsoft Account Severance Textbook The popular \u201cPython for Everyone\u201d book. https://www.py4e.com/book Available in a variety of different formats. Zoom Videoconferencing tool we use for office hours and student support. https://zoom.us Access through Blackboard Zybooks Textbook Our hands-on interactive textbook. Purchase online or via the SU bookstore. https://learn.zybooks.com Your syr.edu Zybooks account Please consult the Course Links section for details.","title":"3rd Party Services Used in This Course"},{"location":"syllabus/#bring-your-own-device","text":"This course uses the BYOD (Bring Your Own Device) model. For Large Group you need a device to ask and answer questions, basically to participate in group chat and polls (Polly). This can be a smartphone, tablet or laptop (Mac, Windows, or Chromebook). Do not try to code along in large group unless you are experienced. It is best to take notes and ask questions. For Small Group you need a device for which you can write code in the browser using Jupyter Hub. This should be a laptop computer (Mac, Windows or Chromebook).","title":"Bring Your Own Device"},{"location":"syllabus/#tutoring","text":"The University offers free tutoring for this course through the Center for Learning and Student Success (CLASS). Sign up for tutoring at: http://myt.syr.edu . For more information on individual and group tutoring sessions, please visit: https://class.syr.edu/academic-support/","title":"Tutoring"},{"location":"syllabus/#methods-of-evaluation","text":"","title":"Methods of Evaluation"},{"location":"syllabus/#grading","text":"This course uses a well thought out mix of individual, group, in-class and out-of-class instruments to assess your knowledge acquisition. A variety of techniques are used to cater to students of different learning styles and assess the course learning outcomes. Assessment Name Blackboard Gradebook Type Learning Outcomes Quantity Points Each Points Total Pct Of Total Grade How Do I Turn it in? Exams E1 - E4 Assessment 1,2,3 4 (3 best count) 30 90 36% Exams Section on Blackboard Project P1 - P4 Assessment 1,2,3,5 1 (Split in 4 Phases) 49 49 20% Project folder on Jupyterhub Zybook Participation Z01 - Z10 Practice 1,2,3 10 2 20 9% Just Read the assigned chapter on the Zybooks Website. Class Coding Labs L01 - L13 Practice 1,2,3,4 13 3 39 16% Run the submission script at end of the Lab in Jupyterhub Homework H01 - H13 Practice 1,2,3,4 13 3 39 16% Run the submission script at end of the Homework in Jupyterhub Small Group Code S01 - S13 Practice 1,2,3 13 1 13 5% Turn in code your code after your small group session. TOTAL 250 For due dates and times for all assignments, consult the What\u2019s Due? section of the Course Schedule .","title":"Grading"},{"location":"syllabus/#exams-e1-e4","text":"Exams are high-stakes assessments. They measure the individual\u2019s ability to recall, understand, and apply the course material. They are one of two instruments in this course which measures your mastery of the learning outcomes. There will be four exams in the course. Your best three scores count towards your final grade, offering you an opportunity to achieve mastery over the material, should you perform poorly on one. Each exam focuses on specific lessons, but due to the nature of the course material, all exams are cumulative. Exams are issued online via blackboard outside of class. You may take the exam anytime and from anywhere on the exam date. Once you start the exam you must complete it in a single session. You get one exam attempt. Do not start until you are ready to take the exam. Exams are timed at 15 minutes and will auto-submit when time is up. Questions consist of multiple choice, and fill-in-the blank. Questions are delivered at random from a pool of questions, one question at a time. This is to mitigate cheating on the exam and copying of code into Python. Since everyone has a 24 hour window to complete the exam, there are no re-issues or make-ups. To prevent building of test banks, answers to the exams will not be released. You may ask in office hours to see your exam.","title":"Exams (E1 - E4)"},{"location":"syllabus/#project-p1-p4","text":"The project is the other high-stakes assessment. The goal of the project is to demonstrate your ability as an individual to program something novel, useful and innovative in Python. It should represent an accurate culmination of what you have learned in the course. You will work on the project individually, be expected to produce working code, and be able to explain it at both a high and detailed level. The project is divided into 4 phases; due dates are posted on the course schedule. You will receive feedback and advice after the first two deliverables; a project grade after the final deliverable. Each project phase must be submitted on Jupyterhub using the provided submission notebook. Late submissions are accepted but will impact your project grade severely.","title":"Project (P1 - P4)"},{"location":"syllabus/#project-phases","text":"Phase Name Deliverables P1 Ideation Outline the specific goals and objectives of your project; include evidence of its feasibility by including citations of resources you will use to complete the code. P2 Beta Version Create a first working draft of the completed program i.e. the \u201cBeta\u201d version; Provide live demo of running program to your small group instructor for feedback. P3 Final Version Final version of working code; Instructor feedback taken into consideration; Improvements to achieve the desired grade. P4 Demo and Reflection Pitch / Demo video of running project program. Video reflection;","title":"Project Phases"},{"location":"syllabus/#criteria-for-project-grade","text":"Complete all project deliverables on time, and to satisfaction as per the requirements. Clearly demonstrate through code 3 things you learned beyond what was taught in class. This can be a new API, module, aspect of or aspect of the Python language itself. This goes beyond just use, you must identify and explain. Take instructor feedback into consideration. Journal as your work on your project, recording time and tasks. In addition, there is a grade limit based on the number of lines of student-written code that is used in the project. Note: copies of code from class or elsewhere do not count. This must be code you wrote yourself that directly impacts the project\u2019s behavior. Lines of student-written code in the project Maximum Possible grade 200 or more A+ 100 to 200 B+ Under 100 C+","title":"Criteria for Project Grade"},{"location":"syllabus/#grading-scale-for-project","text":"Finally, you are assigned a letter grade for your project. This letter grade is translated to a number of points based on this table. Project Grade Assigned Points A+ 49 A 47 A- 45 B+ 42 B 40 B- 37 C+ 35 C 32 C- 30 D+ 27 D 25 D- 20 F 0 Specifics on the project as well as details of each deliverable can be found under your project folder in Jupyterhub.","title":"Grading Scale For Project"},{"location":"syllabus/#zybook-participation-z01-z10","text":"The Zybook https://learn.zybooks.com/ interactive textbook is an excellent resource for learning Python. As such, your use of this resource will be graded. This is a low-stakes assessment which is mostly participatory. For most lessons, relevant Zybook chapters are assigned on the course schedule . As you complete the exercises and readings, your activity is recorded. This is how your grade is determined, which is then posted to Blackboard. Only the readings and participation activities are graded. The challenge activities and labs are optional. You do not need to complete them and they are not part of your Zybook participation grade. Be sure to complete the activities prior to the due date.","title":"Zybook Participation (Z01 - Z10)"},{"location":"syllabus/#rubric-for-zybook-participation","text":"Amount of the chapter you\u2019ve completed before due date Assigned Grade 100% 2 75% or more 1 Less than 75% 0","title":"Rubric for Zybook Participation"},{"location":"syllabus/#class-coding-labs-l01-l13","text":"Each week there will be an out-of-class hands-on lab programming activity. The purpose of the lab is to provide guided, hands-on programming practice. Labs are your first opportunity to get your hands on a keyboard and start programming. This is a low-stakes assessment, mostly participatory. The What\u2019s Due section of the syllabus identifies the lab you should complete. You can find the lab activity on JupyterHub. This activity must be completed and turned submitted by the due date. You may work alone or with a partner as you complete the lab. If you work with another, you should both complete the lab individually, and you should make a note of who your lab partner was when you completed your work. As to not draw attention to a potential academic integrity violation. If you are having difficulty completing the lab, you are welcome to review the walk-through video which guides you through the more difficult parts of the lab. You are encouraged to only consult the walk-through when you are stuck.","title":"Class Coding Labs (L01 - L13)"},{"location":"syllabus/#rubric-for-class-coding-labs","text":"Lab Criteria Definitions: Code Correct means all You Code sections of the lab are correct. Code Complete means all You Code sections have an honest attempt to code the problem at hand. Please note this does not imply the code is correct. If the code is not correct, there is an adequate reflection with student questions. Cells Executed means all code cells in the lab display evidence they were executed in your lab submission. Metacognition Complete means the student made an honest effort to answer the open-ended questions in the lab adequately conveying what you have learned and what still confuses you. This should be evident in the work you have done to complete the lab. Lab Criteria Assigned Grade All 4 criteria met 3 3 criteria met 2 2 criteria met 1 Less than 2 criteria met 0","title":"Rubric for Class Coding Labs"},{"location":"syllabus/#homework-h01-h13","text":"Practice makes perfect. Each week you will be assigned homework to complete outside of class. The goal of the homework is practice problem solving with code independently. Throughout the process you should take inventory of your abilities with respect to the material. While it is admirable to get the code correct, that is not the evaluation criteria nor is it the purpose of the homework. You should use the homework as a personal gauge for how well you are grasping the material. You can find the the homework assignments on JupyterHub. The What\u2019s Due section of the syllabus identifies the homework assignment you should complete. Homework are individual assignments . You can collaborate on strategy but you must must work alone on the assignment. You must be able to explain the code you write, or it will be considered an academic integrity violation. It\u2019s not about getting it right, but it is about making an honest self-assessment! For each homework there is an advice video which provides hints and tips for how you can approach the homework assignment. You are encouraged to only consult the video when you are having difficulty with the homework. If you get assistance from somewhere else, such as online, or someone else such as a tutor, you must divulge that in your submission or it will be considered an academic integrity violation.","title":"Homework (H01 - H13)"},{"location":"syllabus/#rubric-for-homework","text":"Homework Criteria Definitions: Code Correct means an honest attempt was made at a solution and the solution is correct. For incorrect solutions, the code runs, might not be correct, but there is some explanation in the reflection. Code Well Written means your code is easy to understand, modular in nature, has aptly named variables, was programmed in the style we learned in class, and demonstrates what you learned that week. Problem Analysis Complete problem analysis was complete, identifying the problem\u2019s inputs, outputs, and algorithm. An outline of the step-by-step process for how the program should behave. Questions Complete means the student made an honest effort to answer the open-ended questions in the lab. Reflection Complete means the student completed their code reflection, discussing their experiences with completing the assignment. This should provide insight as to how the work was done touching upon struggles, how you got it done, what was learned in the process. Homework Criteria Assigned Grade All 5 criteria met 3 4 criteria met 2 3 criteria met 1 Less than 3 criteria met 0","title":"Rubric for Homework"},{"location":"syllabus/#small-group-code-s01-s13","text":"Your small group instructor will measure attendance and participation each session through you turning in your small group code. This is the code we worked on in class together. The specific criteria is entirely at the discretion of your small group instructor, but mainly consists participating in small group through coding effort.","title":"Small Group Code  (S01 - S13)"},{"location":"syllabus/#grading-scale-for-final-grade","text":"We use the following grading scale for translating your total points earned into a letter grade to be submitted to the University registrar. Student Achievement Total Points Earned Registrar Grade Grade Points Mastery 238 - 250 A 4.000 225 - 237 A- 3.666 Satisfactory 213 - 224 B+ 3.333 200 - 212 B 3.000 188 - 199 B- 2.666 Low Passing 175 - 187 C+ 2.333 163 - 174 C 2.000 151 - 162 C- 1.666 Unsatisfactory 125 - 150 D 1.000 0 - 124 F 0.000","title":"Grading Scale For Final Grade"},{"location":"syllabus/#course-specific-policies","text":"","title":"Course Specific Policies"},{"location":"syllabus/#due-dates","text":"Due dates are posted on the Syllabus in the course schedule section, specifically What\u2019s Due? . Due dates are also posted in Blackboard. In order to provide timely and relevant feedback, no late work is accepted. Exceptions will only be made under extreme circumstances with supporting University documentation of illness or personal reasons.","title":"Due Dates"},{"location":"syllabus/#extra-credit","text":"No extra credit is offered in this course.","title":"Extra Credit"},{"location":"syllabus/#course-honor-code","text":"The course honor code represents our commitment to Academic Integrity in a programming course. I drafted the class honor code to avoid academic negligence - situations where students are unaware that their actions are actually a form of cheating. Our honor code remedies this problem by clearly stating the expectations of Academic Integrity for this course. It states: All work is my own . Answers on all student work, assignments (labs, homework, problem sets, projects, papers, etc\u2026) and assessments (quizzes, exams, tests, etc\u2026) are my own individual work (except where collaboration is explicitly permitted). In the case where collaboration is permitted I will only collaborate within my team. Your own work means it manifests your own thoughts and ideas, not someone else! I will not share answers. I will not make answers (either my own or the professor\u2019s) to work, assignments (labs, problem sets, projects, papers, homework, etc\u2026) and assessments (quizzes, exams, tests, etc\u2026) available to anyone else in or out of class. This includes posting them on the web or sharing them in test banks. I will not misrepresent my ability. I will not engage in any activity which misrepresents or falsifies my knowledge of the subject matter and therefore improves my grade dishonestly. This includes unsanctioned test aids, copying homework, and assistance from unapproved sources outside of class. I will give credit. I will always pay attribution to my sources, and not misrepresent the works of others as my own. If you get code from the internet, you must cite it like you would any source in an academic paper. I accept the honor code and its consequences. I understand and accept that that all work I submit is subject to the honor code, and if I violate this honor code I my instructor is obligated to report me to the University\u2019s office of Academic Integrity. When in doubt, ask. When unsure, disclose openly. Most students who get into trouble are trying to hide their academic dishonesty. Don\u2019t do that. We will catch you easily.","title":"Course Honor Code"},{"location":"syllabus/#sanctions-for-violations-of-academic-integrity","text":"All suspected academic integrity violations will be reported to the university\u2019s office of academic integrity. Proposed sanction for violations of a low-stakes assessment such as a homework assignment or lab, is a grade of zero. Proposed sanction for violations on high-stakes assessment such as a quiz, exam or the final project is a grade of F in the course.","title":"Sanctions for Violations of Academic Integrity"},{"location":"syllabus/#syracuse-university-policies","text":"Syracuse University has a variety of other policies designed to guarantee that students live and study in a community respectful of their needs and those of fellow students. Some of the most important of these concern: Diversity and Disability (ensuring that students are aware of their rights and responsibilities in a diverse, inclusive, accessible, bias-free campus community) can be found here, at: https://www.syracuse.edu/life/accessibilitydiversity/ . Religious Observances Notification and Policy (steps to follow to request accommodations for the observance of religious holidays) can be found here, at: http://supolicies.syr.edu/studs/religious_observance.htm Orange SUccess (tools to access a variety of SU resources, including ways to communicate with advisors and faculty members) can be found here, at: http://orangesuccess.syr.edu/getting-started-2 .","title":"Syracuse University Policies"},{"location":"syllabus/#disability-related-accommodations","text":"Syracuse University values diversity and inclusion; we are committed to a climate of mutual respect and full participation. There may be aspects of the instruction or design of this course that result in barriers to your inclusion and full participation in this course. I invite any student to meet with me to discuss strategies and/or accommodations (academic adjustments) that may be essential to your success and to collaborate with the Center for Disability Resources (CDR) in this process. If you would like to discuss disability-accommodations or register with CDR, please visit Center for Disability Resources. Please call (315) 443-4498 or email disabilityresources@syr.edu for more detailed information. CDR is responsible for coordinating disability-related academic accommodations and will work with the student to develop an access plan. Since academic accommodations may require early planning and generally are not provided retroactively, please contact CDR as soon as possible to begin this process. https://disabilityresources.syr.edu/","title":"Disability-Related Accommodations"},{"location":"syllabus/#university-attendance-policy","text":"Attendance in classes is expected in all courses at Syracuse University. Students are expected to arrive on campus in time to attend the first meeting of all classes for which they are registered. Students who do not attend classes starting with the first scheduled meeting may be academically withdrawn as not making progress toward degree by failure to attend. Instructors set course-specific policies for absences from scheduled class meetings in their syllabi. It is a federal requirement that students who do not attend or cease to attend a class to be reported at the time of determination by the faculty. Faculty should use \u201cESPR\u201d and \u201cMSPR\u201d in Orange Success to alert the Office of the Registrar and the Office of Financial Aid. A grade of NA is posted to any student for whom the Never Attended flag is raised in Orange SUccess. More information regarding Orange SUccess can be found here, at: http://orangesuccess.syr.edu/getting-started-2/ Students should also review the University\u2019s religious observance policy and make the required arrangements at the beginning of each semester","title":"University Attendance Policy"},{"location":"syllabus/#academic-integrity-policy","text":"Syracuse University\u2019s Academic Integrity Policy reflects the high value that we, as a university community, place on honesty in academic work. The policy defines our expectations for academic honesty and holds students accountable for the integrity of all work they submit. Students should understand that it is their responsibility to learn about course-specific expectations, as well as about university-wide academic integrity expectations. The policy governs appropriate citation and use of sources, the integrity of work submitted in exams and assignments, and the veracity of signatures on attendance sheets and other verification of participation in class activities. The policy also prohibits students from submitting the same work in more than one class without receiving written authorization in advance from both instructors. Under the policy, students found in violation are subject to grade sanctions determined by the course instructor and nongrade sanctions determined by the School or College where the course is offered as described in the Violation and Sanction Classification Rubric. SU students are required to read an online summary of the University\u2019s academic integrity expectations and provide an electronic signature agreeing to abide by them twice a year during pre-term check-in on MySlice.","title":"Academic Integrity Policy"},{"location":"syllabus/#use-of-blackboard","text":"This course involves the use of Syracuse University\u2019s Blackboard system as an online tool. The environment is composed of a number of elements that will help you be successful in both your current coursework and your lifelong learning opportunities. To access Blackboard, http://blackboard.syr.edu use your Syracuse University NetID & Password. This specific course will appear in your course list. To search for answers to your Blackboard questions, visit the Answers self-help knowledge https://answers.syr.edu/display/blackboard01/Blackboard . If you have problems logging in or need assistance with Blackboard, contact the ITS Service Center at: help@syr.edu or 315.443.2677. The Syracuse University Blackboard support team will assist you.","title":"Use of Blackboard"},{"location":"syllabus/#course-schedule","text":"Dates Topic (Click Link for Content) 1/24 - 1/30 Lesson 01: Introduction to Python Programming 1/31- 2/6 Lesson 02: Input, Output, Variables and Types 2/7 - 2/13 Lesson 03: Conditionals 2/14 - 2/20 Lesson 04: Iterations 2/21 - 2/27 Lesson 05: User-defined Functions, Modules 2/28 - 3/6 Lesson 06: Strings and Text Processing 3/7 - 3/13 Lesson 07: File I/O and Persistence 3/14 - 3/20 No Classes - Spring Break 3/21 - 3/27 Lesson 08: Lists 3/28 - 4/3 Lesson 09: Dictionaries and JSON 4/4 - 4/10 Lesson 10: HTTP Protocol and Network Programming 4/11 - 5/17 Lesson 11: Web API\u2019s 4/18 - 4/24 Lesson 12: Data Analysis with Pandas 4/25 - 5/1 Lesson 13: Data Visualization 5/2 - 5/8 Project Week (No Large Group Meeting, Meet Small Group Online for P2)","title":"Course Schedule"},{"location":"syllabus/#whats-due","text":"Use this table to track the due dates of the out-of-class deliverables in this course. Dates and times are Eastern Time Zone. Date Due Time Due Gradebook Points Tool What is Due? 1/29/2022 11:59 PM Z01 2 Zybooks Chapter 1 1/29/2022 11:59 PM L01 3 Jupyterhub 01-Intro/LAB-Intro.ipynb 1/29/2022 11:59 PM S01 1 Jupyterhub 01-Intro/SmallGroup-Intro.ipynb 1/29/2022 11:59 PM H01 3 Jupyterhub 01-Intro/HW-Intro.ipynb 1/31/2022 3:00 PM Z02 2 Zybooks Chapter 2 2/1/2022 11:59 PM L02 3 Jupyterhub 02-Variables/LAB-Variables.ipynb 2/2/2022 11:59 PM S02 1 Jupyterhub 02-Variables/SmallGroup-Variables.ipynb 2/5/2022 11:59 PM H02 3 Jupyterhub 02-Variables/HW-Variables.ipynb 2/7/2022 3:00 PM Z03 2 Zybooks Chapter 3 2/8/2022 11:59 PM L03 3 Jupyterhub 03-Conditionals/LAB-Conditionals.ipynb 2/9/2022 11:59 PM S03 1 Jupyterhub 03-Conditionals/SmallGroup-Conditionals.ipynb 2/12/2022 11:59 PM H03 3 Jupyterhub 03-Conditionals/HW-Conditionals.ipynb 2/14/2022 3:00 PM Z04 2 Zybooks Chapter 4 2/15/2022 11:59 PM L04 3 Jupyterhub 04-Iterations/LAB-Iterations.ipynb 2/16/2022 11:59 PM S04 1 Jupyterhub 04-Iterations/SmallGroup-Iterations.ipynb 2/18/2022 11:59 PM E1 30 Blackboard Exam 1 (Focus on Lessons 01-03) 2/19/2022 11:59 PM H04 3 Jupyterhub 04-Iterations/HW-Iterations.ipynb 2/21/2022 3:00 PM Z05 2 Zybooks Chapter 5 2/22/2022 11:59 PM L05 3 Jupyterhub 05-Functions/LAB-Functions.ipynb 2/23/2022 11:59 PM S05 1 Jupyterhub 05-Functions/SmallGroup-Functions.ipynb 2/26/2022 11:59 PM H05 3 Jupyterhub 05-Functions/HW-Functions.ipynb 2/28/2022 3:00 PM Z06 2 Zybooks Chapter 6 3/1/2022 11:59 PM L06 3 Jupyterhub 06-Strings/LAB-Strings.ipynb 3/2/2022 11:59 PM S06 1 Jupyterhub 06-Strings/SmallGroup-Strings.ipynb 3/5/2022 11:59 PM H06 3 Jupyterhub 06-Strings/HW-Strings.ipynb 3/7/2022 3:00 PM Z07 2 Zybooks Chapter 7 3/8/2022 11:59 PM L07 3 Jupyterhub 07-Files/LAB-Files.ipynb 3/9/2022 11:59 PM S07 1 Jupyterhub 07-Files/SmallGroup-Files.ipynb 3/19/2022 11:59 PM H07 3 Jupyterhub 07-Files/HW-Files.ipynb 3/21/2022 3:00 PM Z08 2 Zybooks Chapter 8 3/22/2022 11:59 PM L08 3 Jupyterhub 08-Lists/LAB-Lists.ipynb 3/23/2022 11:59 PM S08 1 Jupyterhub 08-Lists/SmallGroup-Lists.ipynb 3/25/2022 11:59 PM E2 30 Blackboard Exam 2 (Focus on Lessons 04-07) 3/26/2022 11:59 PM H08 3 Jupyterhub 08-Lists/HW-Lists.ipynb 3/28/2022 3:00 PM Z09 2 Zybooks Chapter 9 3/29/2022 11:59 PM L09 3 Jupyterhub 09-Dictionaries/LAB-Dictionaries.ipynb 3/30/2022 11:59 PM S09 1 Jupyterhub 09-Dictionaries/SmallGroup-Dictionaries.ipynb 4/2/2022 11:59 PM H09 3 Jupyterhub 09-Dictionaries/HW-Dictionaries.ipynb 4/5/2022 11:59 PM L10 3 Jupyterhub 10-HTTP/LAB-HTTP.ipynb 4/6/2022 11:59 PM S10 1 Jupyterhub 10-HTTP/SmallGroup-HTTP.ipynb 4/9/2022 11:59 PM H10 3 Jupyterhub 10-HTTP/HW-HTTP.ipynb 4/12/2022 11:59 PM L11 3 Jupyterhub 11-WebAPIs/LAB-WebAPIs.ipynb 4/13/2022 11:59 PM S11 1 Jupyterhub 11-WebAPIs/SmallGroup-WebAPIs.ipynb 4/15/2022 11:59 PM E3 30 Blackboard Exam 3 (Focus on Lessons 08-10) 4/16/2022 11:59 PM H11 3 Jupyterhub 11-WebAPIs/HW-WebAPIs.ipynb 4/19/2022 11:59 PM L12 3 Jupyterhub 12-Pandas/LAB-Pandas.ipynb 4/20/2022 11:59 PM S12 1 Jupyterhub 12-Pandas/SmallGroup-Pandas.ipynb 4/23/2022 11:59 PM H12 3 Jupyterhub 12-Pandas/HW-Pandas.ipynb 4/24/2022 11:59 PM P1 0 Jupyterhub project/P1.ipynb 4/25/2022 3:00 PM Z10 2 Zybooks Chapter 10 4/26/2022 11:59 PM L13 3 Jupyterhub 13-Visualization/LAB-Visualization.ipynb 4/27/2022 11:59 PM S13 1 Jupyterhub 13-Visualization/SmallGroup-Visualization.ipynb 4/30/2022 11:59 PM H13 3 Jupyterhub 13-Visualization/HW-Visualization.ipynb 5/2/2022 11:59 PM E4 30 Blackboard Exam 4 (Focus on Lessons 11-13) 5/4/2022 11:59 PM P2 0 Jupyterhub project/P2.ipynb 5/10/2022 11:59 PM P3 0 Jupyterhub project/P3.ipynb 5/10/2022 11:59 PM P4 49 Jupyterhub project/P4.ipynb","title":"What's Due?"}]}